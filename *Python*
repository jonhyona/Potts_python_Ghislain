Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import glob
... 
... param_files = glob.glob('data_analysis/*/parameters*.pkl')
... for file in param_files:
...     True
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> param_files
['data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameters_f1691446ec79cc0cb9d1f3f898c30585.pkl', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/parameters_779e267d7fd11b394a96bc18ac9d2261.pkl', 'data_analysis/6f276611a177a98a02697e035e772a70/parameters_6f276611a177a98a02697e035e772a70.pkl', 'data_analysis/2a123a981c3e2871ff8ff30383ecca93/parameters_2a123a981c3e2871ff8ff30383ecca93.pkl', 'data_analysis/50a7e2e50bf9b00dff6cd257844d51f7/parameters_50a7e2e50bf9b00dff6cd257844d51f7.pkl', 'data_analysis/bd725ecccb665a616415eb80b3742729/parameters_bd725ecccb665a616415eb80b3742729.pkl']
>>> import glob
... import os
... 
... param_files = glob.glob('data_analysis/*/parameters*.pkl')
... for file in param_files:
...     True
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> param_files
['data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameters_f1691446ec79cc0cb9d1f3f898c30585.pkl', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/parameters_779e267d7fd11b394a96bc18ac9d2261.pkl', 'data_analysis/6f276611a177a98a02697e035e772a70/parameters_6f276611a177a98a02697e035e772a70.pkl', 'data_analysis/2a123a981c3e2871ff8ff30383ecca93/parameters_2a123a981c3e2871ff8ff30383ecca93.pkl', 'data_analysis/50a7e2e50bf9b00dff6cd257844d51f7/parameters_50a7e2e50bf9b00dff6cd257844d51f7.pkl', 'data_analysis/bd725ecccb665a616415eb80b3742729/parameters_bd725ecccb665a616415eb80b3742729.pkl']
>>> import glob
... import os
... 
... param_files = glob.glob('data_analysis/*/parameters*.pkl')
... for file in param_files:
...     True
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> param_files
['data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameters_f1691446ec79cc0cb9d1f3f898c30585.pkl', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/parameters_779e267d7fd11b394a96bc18ac9d2261.pkl', 'data_analysis/6f276611a177a98a02697e035e772a70/parameters_6f276611a177a98a02697e035e772a70.pkl', 'data_analysis/2a123a981c3e2871ff8ff30383ecca93/parameters_2a123a981c3e2871ff8ff30383ecca93.pkl', 'data_analysis/50a7e2e50bf9b00dff6cd257844d51f7/parameters_50a7e2e50bf9b00dff6cd257844d51f7.pkl', 'data_analysis/bd725ecccb665a616415eb80b3742729/parameters_bd725ecccb665a616415eb80b3742729.pkl']
>>> import glob
... import os
... 
... param_files = glob.glob('data_analysis/*/parameters*.pkl')
... for file in param_files:
...     True
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> param_files
['data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameters_f1691446ec79cc0cb9d1f3f898c30585.pkl', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameters_test.pkl', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/parameters_779e267d7fd11b394a96bc18ac9d2261.pkl', 'data_analysis/6f276611a177a98a02697e035e772a70/parameters_6f276611a177a98a02697e035e772a70.pkl', 'data_analysis/2a123a981c3e2871ff8ff30383ecca93/parameters_2a123a981c3e2871ff8ff30383ecca93.pkl', 'data_analysis/50a7e2e50bf9b00dff6cd257844d51f7/parameters_50a7e2e50bf9b00dff6cd257844d51f7.pkl', 'data_analysis/bd725ecccb665a616415eb80b3742729/parameters_bd725ecccb665a616415eb80b3742729.pkl']
>>> file = param_files[1]
>>> file
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameters_test.pkl'
>>> os.rename(file, test.pkl)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'test' is not defined
>>> os.rename(file, 'test.pkl')
>>> os.rename('test.pkl', file)
>>> file
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameters_test.pkl'
>>> ind0 = file =='_'
>>> ind0
False
>>> ind0 = file[25:]
>>> file[25:]
'9cc0cb9d1f3f898c30585/parameters_test.pkl'
>>> file[35:]
'3f898c30585/parameters_test.pkl'
>>> file[45:]
'5/parameters_test.pkl'
>>> file[55:]
'rs_test.pkl'
>>> file[58:]
'test.pkl'
>>> file = param_file[0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'param_file' is not defined
>>> file = param_files[0]
>>> file[:26]
'data_analysis/f1691446ec79'
>>> file[:36]
'data_analysis/f1691446ec79cc0cb9d1f3'
>>> file[:46]
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585'
>>> file[:56]
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameter'
>>> file[:50]
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/par'
>>> file[:47]
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/'
>>> file[:46]
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585'
>>> path = file[:46]
>>> path
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585'
>>> file[47:67]
'parameters_f1691446e'
>>> file[47:57]
'parameters'
>>> import glob
... import os
... 
... param_files = glob.glob('data_analysis/*/parameters*.pkl')
... for file in param_files:
...     path = file[:47]
...     name = file[47:57]
...     extension = '.pkl'
...     os.rename(file, path+-name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/update_files.py", line 9, in <module>
    os.rename(file, path+-name+extension)
TypeError: bad operand type for unary -: 'str'
>>> import glob
... import os
... 
... param_files = glob.glob('data_analysis/*/parameters*.pkl')
... for file in param_files:
...     path = file[:47]
...     name = file[47:57]
...     extension = '.pkl'
...     os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> import glob
... import os
... 
... net_files = glob.glob('data_analysis/*/network*.pkl')
... for file in param_files:
...     path = file[:47]
...     name = file[47:57]
...     extension = '.pkl'
...     # os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> net_files
['data_analysis/f1691446ec79cc0cb9d1f3f898c30585/network_f1691446ec79cc0cb9d1f3f898c30585.pkl', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/network_779e267d7fd11b394a96bc18ac9d2261.pkl', 'data_analysis/6f276611a177a98a02697e035e772a70/network_6f276611a177a98a02697e035e772a70.pkl', 'data_analysis/2a123a981c3e2871ff8ff30383ecca93/network_2a123a981c3e2871ff8ff30383ecca93.pkl', 'data_analysis/50a7e2e50bf9b00dff6cd257844d51f7/network_50a7e2e50bf9b00dff6cd257844d51f7.pkl', 'data_analysis/bd725ecccb665a616415eb80b3742729/network_bd725ecccb665a616415eb80b3742729.pkl']
>>> file = net_files[0]
>>> file[:47]
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/'
>>> file[47:57]
'network_f1'
>>> file[47:54]
'network'
>>> import glob
... import os
... 
... net_files = glob.glob('data_analysis/*/network*.pkl')
... for file in param_files:
...     path = file[:47]
...     name = file[47:54]
...     extension = '.pkl'
...     os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/update_files.py", line 9, in <module>
    # os.rename(file, path+name+extension)
FileNotFoundError: [Errno 2] No such file or directory: 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/parameters_f1691446ec79cc0cb9d1f3f898c30585.pkl' -> 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/paramet.pkl'
>>> import glob
... import os
... 
... net_files = glob.glob('data_analysis/*/network*.pkl')
... for file in net_files:
...     path = file[:47]
...     name = file[47:54]
...     extension = '.pkl'
...     os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> import glob
... import os
... 
... dyn_files = glob.glob('data_analysis/*/dynamics*.pkl')
... for file in dyn_files:
...     path = file[:47]
...     name = file[47:54]
...     extension = '.pkl'
...     # os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> dyn_files
[]
>>> import glob
... import os
... 
... dyn_files = glob.glob('data_analysis/*/dynamics*.tct')
... for file in dyn_files:
...     path = file[:47]
...     name = file[47:54]
...     extension = '.pkl'
...     # os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> import glob
... import os
... 
... dyn_files = glob.glob('data_analysis/*/dynamics*.txt')
... for file in dyn_files:
...     path = file[:47]
...     name = file[47:54]
...     extension = '.pkl'
...     # os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> dyn_files
['data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_7_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_26_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_149_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_166_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_30_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_143_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_147_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_1_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_195_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_170_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_126_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_132_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_119_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_184_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_34_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_63_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_19_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_55_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_96_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_106_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_102_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_89_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_116_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_159_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_142_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_46_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_28_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_117_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_168_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_57_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_41_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_32_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_87_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_79_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_111_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_85_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_156_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_65_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_185_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_27_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_49_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_179_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_188_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_157_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_103_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_175_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_197_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_48_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_36_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_45_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_186_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_14_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_59_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_83_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_37_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_160_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_136_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_78_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_29_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_176_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_181_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_131_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_21_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_193_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_81_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_189_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_72_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_182_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_98_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_158_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_54_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_62_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_187_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_172_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_140_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_93_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_192_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_130_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_44_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_122_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_58_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_114_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_74_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_153_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_64_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_35_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_174_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_53_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_88_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_148_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_128_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_154_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_11_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_118_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_10_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_123_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_100_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_75_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_68_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_73_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_180_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_127_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_146_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_13_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_155_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_113_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_105_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_129_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_25_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_198_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_97_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_137_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_108_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_6_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_141_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_50_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_40_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_115_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_144_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_151_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_112_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_177_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_135_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_43_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_109_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_191_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_125_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_42_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_66_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_164_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_51_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_178_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_91_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_150_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_24_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_33_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_165_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_5_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_94_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_2_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_69_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_134_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_9_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_67_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_15_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_152_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_70_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_120_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_92_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_22_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_183_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_169_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_161_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_190_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_0_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_38_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_47_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_162_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_39_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_80_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_77_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_84_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_95_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_173_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_99_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_76_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_23_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_52_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_12_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_8_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_167_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_56_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_90_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_17_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_104_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_171_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_139_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_138_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_101_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_16_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_4_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_196_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_3_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_194_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_199_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_71_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_61_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_133_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_107_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_110_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_163_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_124_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_60_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_20_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_31_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_145_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_82_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_86_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_121_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/dynamics_cue_18_f1691446ec79cc0cb9d1f3f898c30585.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_23_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_162_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_39_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_119_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_148_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_69_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_53_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_100_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_2_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_133_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_146_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_130_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_25_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_57_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_189_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_157_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_163_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_41_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_32_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_161_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_65_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_17_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_151_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_12_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_4_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_177_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_42_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_55_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_3_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_22_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_83_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_164_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_180_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_93_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_94_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_143_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_152_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynami  C-c C-ccs_cue_178_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_98_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_129_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_34_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_160_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_28_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_35_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_135_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_185_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_38_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_165_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_144_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_88_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_80_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_108_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_45_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_105_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_114_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_6_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_95_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_61_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_44_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_142_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_145_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_121_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_116_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_168_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_181_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_120_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_74_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_138_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_193_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_47_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_197_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_86_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_175_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_123_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_30_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_82_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_analysis/779e267d7fd11b394a96bc18ac9d2261/dynamics_cue_167_779e267d7fd11b394a96bc18ac9d2261.txt', 'data_a  C-c C-cTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyboardInterrupt
>>> 
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import glob
... import os
... 
... dyn_files = glob.glob('data_analysis/*/dynamics*.txt')
... for file in dyn_files:
...     path = file[:47]
...     name = file[47:54]
...     extension = '.pkl'
...     # os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> file = dyn_files[0]
>>> file[:47]
'data_analysis/f1691446ec79cc0cb9d1f3f898c30585/'
>>> file[47:57]
'dynamics_c'
>>> file[47:67]
'dynamics_cue_7_f1691'
>>> file[47:64]
'dynamics_cue_7_f1'
>>> file[47:61]
'dynamics_cue_7'
>>> import glob
... import os
... 
... dyn_files = glob.glob('data_analysis/*/dynamics*.txt')
... for file in dyn_files:
...     path = file[:47]
...     name = file[47:61]
...     extension = '.txt'
...     os.rename(file, path+name+extension)
... 
... # os.rename(r'file path\OLD file name.file type',r'file path\NEW file name.file type')
>>> os.walk(directory)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'directory' is not defined
>>> os.walk('data_analysis')
<generator object walk at 0x7efe40ad8a98>
>>> [x[0] for x in os.walk('data_path')
...   C-c C-c
KeyboardInterrupt
>>> [x[0] for x in os.walk('data_path')]
[]
>>> [x[0] for x in os.walk('data_path/')]
[]
>>> [x[0] for x in os.walk('data_path/')]
[]
>>> [x[0] for x in os.walk('data_path')]
[]
>>> [x[0] for x in os.walk('data_path')]  C-c C-c
KeyboardInterrupt
>>> pwd
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'pwd' is not defined
>>> pwd()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'pwd' is not defined
>>> cd data_analysis
  File "<stdin>", line 1
    cd data_analysis
                   ^
SyntaxError: invalid syntax
>>> import os
>>> os.getcwd()
'/home/gdlb/Nextcloud/limbo_internship/PottsModel'
>>> for i,j,y in os.walk('.'):
    print(i) 
... ... 
.
./__pycache__
./parameterSets
./.git
./.git/objects
./.git/objects/9a
./.git/objects/f0
./.git/objects/89
./.git/objects/c5
./.git/objects/1f
./.git/objects/59
./.git/objects/9d
./.git/objects/5a
./.git/objects/a3
./.git/objects/e4
./.git/objects/e8
./.git/objects/43
./.git/objects/13
./.git/objects/5f
./.git/objects/06
./.git/objects/b8
./.git/objects/0f
./.git/objects/27
./.git/objects/b2
./.git/objects/42
./.git/objects/3b
./.git/objects/f6
./.git/objects/34
./.git/objects/26
./.git/objects/00
./.git/objects/d4
./.git/objects/88
./.git/objects/c1
./.git/objects/da
./.git/objects/2f
./.git/objects/ce
./.git/objects/fd
./.git/objects/45
./.git/objects/b1
./.git/objects/a2
./.git/objects/c6
./.git/objects/de
./.git/objects/68
./.git/objects/48
./.git/objects/91
./.git/objects/86
./.git/objects/78
./.git/objects/6c
./.git/objects/c4
./.git/objects/ad
./.git/objects/d0
./.git/objects/a9
./.git/objects/09
./.git/objects/64
./.git/objects/ea
./.git/objects/56
./.git/objects/0c
./.git/objects/69
./.git/objects/e5
./.git/objects/d8
./.git/objects/b6
./.git/objects/af
./.git/objects/12
./.git/objects/db
./.git/objects/62
./.git/objects/83
./.git/objects/02
./.git/objects/2b
./.git/objects/8f
./.git/objects/39
./.git/objects/a0
./.git/objects/55
./.git/objects/6f
./.git/objects/d7
./.git/objects/d5
./.git/objects/a5
./.git/objects/11
./.git/objects/f5
./.git/objects/82
./.git/objects/1c
./.git/objects/99
./.git/objects/46
./.git/objects/ec
./.git/objects/8b
./.git/objects/35
./.git/objects/info
./.git/objects/7c
./.git/objects/24
./.git/objects/ba
./.git/objects/e2
./.git/objects/ab
./.git/objects/3e
./.git/objects/77
./.git/objects/21
./.git/objects/f9
./.git/objects/a6
./.git/objects/c0
./.git/objects/e1
./.git/objects/c3
./.git/objects/3c
./.git/objects/1b
./.git/objects/9f
./.git/objects/df
./.git/objects/10
./.git/objects/15
./.git/objects/94
./.git/objects/bf
./.git/objects/ff
./.git/objects/96
./.git/objects/e9
./.git/objects/fe
./.git/objects/8d
./.git/objects/3f
./.git/objects/72
./.git/objects/cf
./.git/objects/7a
./.git/objects/32
./.git/objects/07
./.git/objects/a4
./.git/objects/03
./.git/objects/14
./.git/objects/1a
./.git/objects/1d
./.git/objects/95
./.git/objects/9e
./.git/objects/28
./.git/objects/93
./.git/objects/80
./.git/objects/75
./.git/objects/eb
./.git/objects/b9
./.git/objects/6b
./.git/objects/b4
./.git/objects/73
./.git/objects/dc
./.git/objects/63
./.git/objects/c9
./.git/objects/f1
./.git/objects/9b
./.git/objects/70
./.git/objects/5d
./.git/objects/22
./.git/objects/7b
./.git/objects/18
./.git/objects/51
./.git/objects/6a
./.git/objects/f2
./.git/objects/92
./.git/objects/fc
./.git/objects/d1
./.git/objects/25
./.git/objects/c8
./.git/objects/e3
./.git/objects/d9
./.git/objects/cc
./.git/objects/bc
./.git/objects/cd
./.git/objects/65
./.git/objects/0d
./.git/objects/be
./.git/objects/57
./.git/objects/5e
./.git/objects/f4
./.git/objects/b0
./.git/objects/47
./.git/objects/16
./.git/objects/f8
./.git/objects/7e
./.git/objects/aa
./.git/objects/2d
./.git/objects/0a
./.git/objects/5b
./.git/objects/20
./.git/objects/dd
./.git/objects/71
./.git/objects/44
./.git/objects/a7
./.git/objects/4a
./.git/objects/87
./.git/objects/ae
./.git/objects/8a
./.git/objects/98
./.git/objects/67
./.git/objects/pack
./.git/objects/30
./.git/objects/66
./.git/objects/9c
./.git/objects/fb
./.git/objects/05
./.git/objects/38
./.git/objects/a1
./.git/objects/76
./.git/objects/97
./.git/objects/41
./.git/objects/2a
./.git/objects/4e
./.git/objects/81
./.git/objects/53
./.git/objects/3d
./.git/objects/4d
./.git/objects/79
./.git/objects/19
./.git/objects/37
./.git/objects/4b
./.git/objects/d3
./.git/objects/6d
./.git/objects/b5
./.git/objects/31
./.git/objects/a8
./.git/objects/8c
./.git/objects/23
./.git/objects/0e
./.git/objects/49
./.git/objects/f7
./.git/objects/ac
./.git/objects/fa
./.git/objects/04
./.git/objects/84
./.git/objects/e6
./.git/objects/85
./.git/objects/74
./.git/objects/2e
./.git/objects/08
./.git/objects/ca
./.git/objects/ed
./.git/objects/50
./.git/objects/2c
./.git/objects/b7
./.git/objects/7f
./.git/objects/7d
./.git/objects/c7
./.git/objects/54
./.git/objects/4c
./.git/objects/6e
./.git/objects/61
./.git/objects/ef
./.git/objects/17
./.git/objects/29
./.git/objects/d6
./.git/objects/33
./.git/objects/8e
./.git/objects/c2
./.git/objects/0b
./.git/objects/4f
./.git/objects/f3
./.git/objects/b3
./.git/objects/60
./.git/objects/e0
./.git/objects/90
./.git/objects/d2
./.git/objects/e7
./.git/objects/cb
./.git/objects/01
./.git/objects/40
./.git/objects/58
./.git/objects/ee
./.git/objects/5c
./.git/objects/3a
./.git/objects/bb
./.git/objects/1e
./.git/objects/bd
./.git/objects/52
./.git/info
./.git/refs
./.git/refs/original
./.git/refs/original/refs
./.git/refs/original/refs/heads
./.git/refs/heads
./.git/refs/tags
./.git/refs/remotes
./.git/refs/remotes/origin
./.git/branches
./.git/hooks
./.git/logs
./.git/logs/refs
./.git/logs/refs/heads
./.git/logs/refs/remotes
./.git/logs/refs/remotes/origin
./correlations
./Figures
./data_analysis
./data_analysis/a0b5796348ceacbae6229728fd2ee971
./scan_corr
./pattern_space
>>> for i,j,y in os.walk('data_analysis'):
    print(i) 
... ... 
data_analysis
data_analysis/a0b5796348ceacbae6229728fd2ee971
>>> import glob
... import file_handling
... 
... 
... for root,dirs,_ in os.walk('data_analysis'):
...     for d in dirs:
...         print os.path.join(root,d)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/update_sim_table.py", line 7
    print os.path.join(root,d)
           ^
SyntaxError: invalid syntax
>>> import glob
... import file_handling
... 
... for root,dirs,_ in os.walk('data_analysis'):
...     for d in dirs:
...         print os.path.join(root,d)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/update_sim_table.py", line 6
    print os.path.join(root,d)
           ^
SyntaxError: invalid syntax
>>> import glob
... import file_handling
... 
... for root,dirs,_ in os.walk('data_analysis'):
...     for d in dirs:
...         print os.path.join(root,d)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/update_sim_table.py", line 6
    print os.path.join(root,d)
           ^
SyntaxError: invalid syntax
>>> import glob
... import file_handling
... import os
... 
... for root,dirs,_ in os.walk('data_analysis'):
...     for d in dirs:
...         print os.path.join(root, d)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/update_sim_table.py", line 7
    print os.path.join(root, d)
           ^
SyntaxError: invalid syntax
>>> import glob
... import file_handling
... import os
... 
... for root, dirs, z in os.walk('data_analysis'):
...     for d in dirs:
...         print(os.path.join(root, d))
data_analysis/a0b5796348ceacbae6229728fd2ee971
>>> import glob
... import file_handling
... import os
... 
... for root, dirs, z in os.walk('data_analysis'):
...     for d in dirs:
...         print(d)
a0b5796348ceacbae6229728fd2ee971
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 41, in <module>
    russo2008_mode) = file_handling.load_parameters(simulations[0]+'.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 123, in load_parameters
    return load_data(key+'/parameters.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 118, in load_data
    with open(data_path+file_name, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'data_analysis/4406010109634386043.pkl/parameters.pkl'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 42, in <module>
    russo2008_mode) = file_handling.load_parameters(simulations[0]+'.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 123, in load_parameters
    return load_data(key+'/parameters.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 118, in load_data
    with open(data_path+file_name, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'data_analysis/6f276611a177a98a02697e035e772a70.pkl/parameters.pkl'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 42, in <module>
    russo2008_mode) = file_handling.load_parameters(simulations[0]+'.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 123, in load_parameters
    return load_data(key+'/parameters.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 118, in load_data
    with open(data_path+file_name, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'data_analysis/6f276611a177a98a02697e035e772a70.pkl/parameters.pkl'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 251, in <module>
    retrieved_saved = file_handling.load_retrieved(simulation+'.txt')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 127, in load_retrieved
    return load_full_dynamics(3, int, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 94, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 87, in load_cue_dynamics
    return (load_text(key+'/dynamics_cue_%d.txt' % cue)[item]).astype(dtype)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 178, in load_text
    return(np.loadtxt(data_path + file_name))
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/npyio.py", line 981, in loadtxt
    fh = np.lib._datasource.open(fname, 'rt', encoding=encoding)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/_datasource.py", line 269, in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/_datasource.py", line 623, in open
    raise IOError("%s not found." % path)
OSError: data_analysis/6f276611a177a98a02697e035e772a70.txt/dynamics_cue_0.txt not found.
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 251, in <module>
    retrieved_saved = file_handling.load_retrieved(simulation+'.txt')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 127, in load_retrieved
    return load_full_dynamics(3, int, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 94, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 87, in load_cue_dynamics
    return (load_text(key+'/dynamics_cue_%d.txt' % cue)[item]).astype(dtype)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 178, in load_text
    return(np.loadtxt(data_path + file_name))
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/npyio.py", line 981, in loadtxt
    fh = np.lib._datasource.open(fname, 'rt', encoding=encoding)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/_datasource.py", line 269, in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/_datasource.py", line 623, in open
    raise IOError("%s not found." % path)
OSError: data_analysis/6f276611a177a98a02697e035e772a70.txt/dynamics_cue_0.txt not found.
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 251, in <module>
    retrieved_saved = file_handling.load_retrieved(simulation+'.txt')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 127, in load_retrieved
    return load_full_dynamics(3, int, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 94, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 87, in load_cue_dynamics
    return (load_text(key+'/dynamics_cue_%d.txt' % cue)[item]).astype(dtype)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 178, in load_text
    return(np.loadtxt(data_path + file_name))
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/npyio.py", line 981, in loadtxt
    fh = np.lib._datasource.open(fname, 'rt', encoding=encoding)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/_datasource.py", line 269, in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/_datasource.py", line 623, in open
    raise IOError("%s not found." % path)
OSError: data_analysis/6f276611a177a98a02697e035e772a70.txt/dynamics_cue_0.txt not found.
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 260, in <module>
    russo2008_mode) = file_handling.load_parameters(simulation+'.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 123, in load_parameters
    return load_data(key+'/parameters.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 118, in load_data
    with open(data_path+file_name, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'data_analysis/6f276611a177a98a02697e035e772a70.pkl/parameters.pkl'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
qt5ct: using qt5ct plugin
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:178: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 251, in <module>
    retrieved_saved = file_handling.load_retrieved(simulation)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 127, in load_retrieved
    return load_full_dynamics(3, int, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 94, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 87, in load_cue_dynamics
    return (load_text(key+'/dynamics_cue_%d.txt' % cue)[item]).astype(dtype)
IndexError: index 3 is out of bounds for axis 0 with size 0
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:178: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 252, in <module>
    retrieved_saved = file_handling.load_retrieved(simulation)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 127, in load_retrieved
    return load_full_dynamics(3, int, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 94, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 87, in load_cue_dynamics
    return (load_text(key+'/dynamics_cue_%d.txt' % cue)[item]).astype(dtype)
IndexError: index 3 is out of bounds for axis 0 with size 0
>>> g_A
0.0
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 252, in <module>
    retrieved_saved = file_handling.load_retrieved(simulation)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 127, in load_retrieved
    return load_full_dynamics(3, int, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 94, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 87, in load_cue_dynamics
    return (load_text(key+'/dynamics_cue_%d.txt' % cue)[item]).astype(dtype)
IndexError: index 3 is out of bounds for axis 0 with size 0
>>> file_handling.load_text(key+'/dynamics_cue_%d.txt' % 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'key' is not defined
>>> key = simulations[1]
>>> file_handling.load_text(key+'/dynamics_cue_%d.txt' % 1)
array([], dtype=float64)
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:182: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 252, in <module>
    retrieved_saved = file_handling.load_retrieved(simulation)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 131, in load_retrieved
    return load_full_dynamics(3, int, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 98, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
AttributeError: 'list' object has no attribute 'tolist'
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:182: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 274, in <module>
    get_mi_crossovers(retrieved_saved, lamb, threshold)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 214, in get_mi_crossovers
    if cue_ind != retrieved_saved[cue_ind][0]:
TypeError: 'int' object is not subscriptable
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:182: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 275, in <module>
    get_mi_crossovers(retrieved_saved, lamb, threshold)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 213, in get_mi_crossovers
    if len(retrieved_saved[cue_ind]) >= 1:
TypeError: object of type 'int' has no len()
>>> retrieved_saved[cue_ind]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cue_ind' is not defined
>>> retrieved_saved[1]
[]
>>> len(retrieved_saved[1])
0
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 276, in <module>
    get_mi_crossovers(retrieved_saved, lamb, threshold)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 214, in get_mi_crossovers
    if len(retrieved_saved[cue_ind]) >= 1:
TypeError: object of type 'int' has no len()
>>> len(retrieved_saved[1])
0
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:182: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 276, in <module>
    get_mi_crossovers(retrieved_saved, lamb, threshold)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 214, in get_mi_crossovers
    if len(retrieved_saved[cue_ind]) >= 1:
TypeError: object of type 'int' has no len()
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:182: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 276, in <module>
    get_mi_crossovers(retrieved_saved, lamb, threshold)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 213, in get_mi_crossovers
    print(retrieved_saved[cue_ind])
NameError: name '_saved' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 276, in <module>
    get_mi_crossovers(retrieved_saved, lamb, threshold)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 214, in get_mi_crossovers
    if len(retrieved_saved[cue_ind]) >= 1:
TypeError: object of type 'int' has no len()
>>> retrieved_saved
[0, [], [2, 24, 166, 89, 12], [3, 143, 66], [4, 184, 175, 117, 33, 145, 37, 74, 135, 59, 82, 175, 52, 35, 20, 27, 111, 124, 14, 175, 117, 33, 147, 143, 42, 66, 61, 77, 75, 78, 143, 9, 155, 141, 102, 33, 12, 69], [5, 26, 199, 119, 182, 164, 56, 44, 134, 23, 120, 25, 98, 13, 97, 177, 10, 52, 12, 139, 3, 138, 52, 12, 95, 76, 20, 143, 196, 55, 113, 4, 23, 120, 75, 5, 188, 72, 25, 167, 178, 10, 84, 120, 33, 154, 67, 16, 103, 84, 164, 163, 142, 85, 21, 89, 155, 57, 158, 107, 51, 87, 175, 131, 44, 146, 193, 49, 149, 128], [6, 143, 196, 21, 17, 125, 87, 175, 182, 48, 164, 144, 66, 40], 7, [8, 85, 17, 129, 82, 131, 99, 152, 49, 118, 12, 52, 116, 7, 87, 51, 67, 80, 74, 55, 189, 21, 189, 33, 133, 136, 107], [9, 127, 37, 165, 37, 165, 102], [10, 84, 21, 108, 193, 91, 199, 74, 33, 61, 70, 135], [11, 142, 10, 107, 183, 95, 122, 124, 28], 12, 13, 14, [15, 153, 79, 133, 117, 192, 70, 110, 44, 69, 5, 144], 16, 17, [18, 108, 116, 52, 119, 21, 51, 87, 116, 36, 48, 167, 35, 41, 52, 72, 94, 37, 129, 44, 196, 66], [19, 122, 140, 152, 176, 32, 51, 138, 75, 6, 143, 189, 179, 85, 5], [20, 143, 160, 73, 193, 49, 41, 52, 72, 163, 76, 95, 15, 38, 2, 24, 14, 175, 52, 12, 140, 96, 189, 52, 116, 91, 83, 22, 4, 124, 14, 118, 139, 10, 103, 66, 153, 79, 46, 170, 97, 56, 36, 98, 25, 72, 100, 175, 6, 99, 55, 98, 25, 139, 89, 44, 5, 133, 33, 154, 157, 83, 76, 95, 78, 180, 19, 122, 13, 112, 113, 190, 110, 157, 36, 48, 197, 85, 43, 195, 56, 44, 134, 23, 84, 75, 55, 17, 129, 82, 91, 85, 17, 33, 139, 134], [21, 15, 153, 79, 133, 117, 192], [22, 109, 186, 195, 153, 70, 103, 197, 194, 197, 194, 197, 194, 138, 44, 10, 84, 102, 29], [23, 57], [24, 2, 149, 128, 16, 81, 7, 167, 105, 17, 36, 166, 183, 3, 57, 42, 45, 116, 14, 82, 41, 48, 196, 169, 78, 3, 117, 87, 175, 131, 103, 153, 71, 112, 21, 15, 49, 48, 164, 84, 21, 58, 175, 118, 69, 151, 139, 95, 163, 172, 87, 44, 56, 109, 110, 9, 30, 118, 52, 72, 138, 36, 198, 14, 157, 196, 139, 4, 22, 175, 168, 160, 119, 20, 143, 3, 159, 186, 196, 82, 13, 40, 167, 25, 72, 138, 41, 52, 12, 167, 53, 190, 75, 156, 54, 169, 144, 127, 165, 56, 36, 173, 181, 33, 152, 155, 82, 158, 148, 162, 155, 87, 60, 42, 16, 19, 80, 121, 45, 23, 108, 193, 169, 101, 4, 23, 84, 21], [25, 72, 138, 41, 52, 12, 167, 25, 72, 138, 41, 52, 12, 45, 20, 199, 190, 183, 78, 103, 153, 79, 133, 117], 26, [27, 20, 143, 160, 73, 156, 161, 80, 25, 177, 83, 91, 102, 148, 57, 154, 2, 172, 15, 21, 139, 44, 156, 188], [28, 4, 22, 5, 69, 117, 199], [29, 185], [30, 69, 85, 74, 37, 99, 186, 197, 33, 89], 31, [32, 51, 138, 41, 52, 175, 18, 167, 12], 33, 34, [35, 69, 165, 116, 165, 168, 142, 1, 16, 199, 139, 190, 86, 39, 149, 155, 87, 7, 179, 36, 48, 184, 175, 117, 33, 181, 173, 78, 197, 33, 89, 61, 195, 62, 82, 158, 10, 84, 21, 41, 52, 12, 7, 54, 99, 152, 49, 118, 161, 167, 40, 117, 33, 147, 106, 36, 57, 69, 58, 129, 75, 184, 48, 164, 84, 21, 153, 79, 133, 117, 192], [36, 48, 164, 74], 37, [38, 161, 181, 124, 188, 72, 138, 44, 69, 85, 185, 43, 195, 106, 162, 62], 39, [40, 167, 25, 72, 138, 41, 52, 12, 167, 25, 72, 138, 68, 139, 89, 74], [41, 52, 12, 103, 88, 117, 43, 195, 56, 44, 134, 26, 96, 194], [42, 21, 78, 41, 52, 12, 139, 167, 25, 5, 32, 51, 138, 98, 25, 7, 167, 162, 66, 89, 155, 94, 117, 168, 132, 131, 136, 94, 180, 0, 194, 61, 153, 93, 56, 44, 134, 23, 6, 74, 154, 67, 52, 175, 131, 129, 44, 168, 21, 143, 21, 78, 30, 69, 55, 28, 125, 197], 43, 44, [45, 121, 49, 69, 9, 120, 84, 21, 153], 46, 47, [48, 164, 114, 142, 143, 38, 161, 146, 155, 84, 23, 127, 0, 51, 138, 114, 44, 126, 154, 36, 173, 19, 192, 164, 196, 9, 127, 165, 168, 21, 183, 120, 145, 87, 52, 90, 183, 78, 19, 140, 44, 56, 195, 68, 20, 140, 44, 192, 84, 143, 38, 161, 124, 64, 62, 95, 15, 68, 20, 191, 116, 14, 82], [49, 69], [50, 1, 19, 126, 33, 117, 199, 6, 82, 174, 131, 132, 115, 173, 181, 33, 75, 84, 21, 78, 45, 183, 13, 75, 20, 143, 109, 110, 70, 137, 196, 164, 84, 59, 61, 161, 8, 32], [51, 102, 53, 183, 95, 76, 69, 55, 21, 153, 103, 153, 38, 180, 120, 27, 134, 44, 128, 56, 195, 157, 5, 20, 69, 12, 139, 138, 172, 20, 143, 160, 167, 25, 72, 183, 21, 153, 103, 194, 29, 171, 122, 166, 14, 32, 51, 138, 41, 52, 175, 57, 69, 106, 162, 144, 139, 151, 129, 44, 168, 192, 84, 21, 68, 20, 38, 55, 85, 74, 33, 86, 164, 143, 32, 167, 7, 45, 143, 151, 193, 98, 25, 7, 33, 89, 87, 51, 67, 80, 193, 101, 79], [52, 175, 57, 69, 161, 108, 42, 143, 39, 58, 117, 175, 100, 57, 180, 158, 10, 35, 55, 75, 174, 162, 27, 20, 193, 101, 32, 51, 175, 145, 130, 94, 72, 138, 103, 21, 66, 101, 18, 193, 125, 143, 31, 111, 69, 165, 56, 36, 122, 33, 74, 199, 26, 92, 122, 98, 25, 2, 24], [53, 183, 95, 127, 165, 56, 151, 108, 23, 157, 19, 119, 14, 48, 164, 16, 151, 140, 55, 78, 59, 50, 107, 109, 173, 181, 33, 61, 66, 52, 12], [54, 156, 188, 72, 138, 44, 150, 109, 143, 3, 159, 145, 87, 51, 67], [55, 27, 119, 127, 10, 104, 164, 12, 52, 155, 103, 199, 43, 60, 105, 185, 70, 4, 22, 5, 118, 168, 21, 78, 19, 122, 89, 74], [56, 44, 134, 23, 143, 56, 44, 134, 117, 73, 160, 157, 104, 10, 35, 183, 38, 156, 75, 20, 143, 1, 41, 52, 72, 117, 199, 75], [57, 14, 187, 141, 102, 154, 67, 122, 183], 58, 59, [60, 130, 26, 153], 61, 62, [63, 140, 44, 116, 69, 31, 145, 10, 103, 153, 70, 183, 34, 178, 75, 84, 153, 70, 77, 119, 11, 91, 19, 80, 175, 52, 142, 20, 62, 173, 181, 58, 142, 32, 164, 84, 120, 63], [64, 178, 82, 22, 149, 147, 46, 50, 142, 39, 2, 75, 138, 51, 32, 14, 57, 36, 48, 184, 175, 117, 33, 143, 147, 100, 55, 85, 16, 60, 130, 140, 54, 95, 76, 165, 127, 151, 106, 195, 99, 10, 84, 120], [65, 196, 166, 188, 156, 54, 113, 123, 137, 103, 153, 71, 186, 140, 67, 106, 138, 52, 175, 57], 66, 67, 68, 69, 70, [71, 153, 79, 101, 4, 28, 170, 114, 50, 10, 175, 52, 12, 167, 25, 72, 138, 135, 70, 192, 61, 129, 96], [72, 138, 41, 159, 186, 159, 186, 159, 186], [73, 160, 33, 188, 170, 114, 50, 84, 21, 112, 13, 40, 2, 5, 197, 152, 57, 14, 196, 164, 2, 171, 9, 186], [74, 33, 109, 2, 153, 71, 130, 105, 15, 23, 161, 139, 151, 140], 75, [76, 95, 183, 38, 2, 24, 94, 117, 168, 21, 15, 153, 79, 133, 117, 192], [77, 75, 162, 155, 175, 52, 38, 161, 19, 72, 138, 98, 84, 120, 87, 153, 71, 161, 134, 195, 185, 13, 97], [78, 3, 192, 136, 192, 136, 192, 136, 73, 101, 4, 22, 5, 169, 51, 87, 57, 14], [79, 101, 32, 51, 175, 117, 33, 147], 80, [81, 18, 108, 75, 55, 190, 86, 117, 33, 143, 9, 108, 99], 82, [83, 91, 55, 188, 72, 138, 41, 135, 59, 69, 12, 167, 6, 37, 102, 132], [84, 59, 82, 9, 81, 120, 33, 154, 67, 126, 161, 38, 143, 1, 110, 90, 98, 25, 72, 94, 42, 66, 52, 12, 167, 25, 72, 138, 84, 120, 33, 61, 75, 84, 164, 29, 20, 160, 185, 29, 52, 175, 57, 55, 188, 72, 138, 44, 140, 152, 28, 4, 22, 160, 143, 20, 199, 52, 12, 167, 25, 72, 138, 84, 59, 105, 164, 48, 184, 175, 117, 33, 143, 151, 59, 122, 110, 16, 140, 44, 129, 96, 17, 162, 36, 48, 184, 175, 117, 165, 36, 48, 184, 175, 151, 140, 66, 21, 78, 173, 181, 124, 14, 119, 27, 197, 25, 177, 69, 49, 48, 164, 84, 21, 137, 22, 190], 85, [86, 70, 161, 108, 175, 117, 33, 143, 183, 38, 19, 141, 10, 84, 21, 89, 155, 141, 54, 169, 19, 62, 20, 143, 102, 92], [87, 51, 67, 80, 104, 172, 36, 173, 181, 74, 89, 191, 106, 108, 194, 98, 25, 85, 197, 48, 35, 121, 112, 13, 152, 60, 52, 1, 118], 88, 89, [90, 98, 25, 2, 24, 183, 95, 115, 132, 45, 107, 109, 10, 103, 153, 199, 74, 33, 109, 2, 20], [91, 85, 17, 36, 48], [92, 22, 166], [93, 56, 44, 134, 23, 6, 116, 188, 166, 179, 168, 21, 139, 190, 177, 188, 73, 186, 140, 176, 23, 143, 142, 58, 175, 57, 99, 179, 10, 103, 153, 79, 133, 117, 33, 147, 144, 2, 172, 60, 101, 194, 153, 187, 59, 181, 0, 134, 44, 103, 53, 104, 80, 148, 36, 99, 182, 164, 33, 42, 45, 121, 49], [94, 155, 175, 52, 41, 197, 152, 33, 61, 99, 195, 51, 68, 51, 68, 51], [95, 67, 81, 94, 117, 165, 168, 181, 71, 197, 183, 21, 15, 153, 79, 133, 117, 192, 97, 129, 181, 79], 96, [97, 56, 10, 104, 146, 180, 84], [98, 25, 2, 24, 14, 175, 52, 12, 167, 25, 72, 138, 52, 101, 76, 95, 183, 90, 98, 25, 2, 24, 109, 82, 41, 52, 175, 57, 103, 153, 79, 133, 117, 192, 97, 7, 24, 109, 33, 181, 173, 78, 197, 152, 28, 4, 22, 147, 144, 23, 4, 22, 30, 118, 116, 7, 175, 117, 33, 143, 20, 199, 91, 85, 17, 129, 22, 10, 185, 152, 5, 26, 92, 113, 4, 14, 124, 53, 175, 117, 33], 99, 100, [101, 4, 192, 65, 175, 87, 145, 182, 114, 170, 149, 128, 16, 25, 177, 128, 175, 52, 41], 102, [103, 153, 71, 38, 83, 91, 19, 51, 157, 184, 48, 178, 167, 7, 89, 74, 37, 129, 44, 12, 85, 17, 129, 96, 168, 21, 107, 109, 120, 18, 108, 116, 52, 1], [104, 172, 143], [105, 164, 48, 75, 77, 35, 70, 135, 152, 141, 145, 28, 23, 66, 41, 82, 171, 87, 187, 87, 175, 137, 26, 130], 106, [107, 10, 103, 84, 36, 48, 102, 154, 120, 25, 177, 83, 91, 161, 135, 103, 21, 51, 87, 5, 10, 84, 120, 43, 85, 5, 103, 153, 2, 109, 75, 186, 55, 69, 5, 196, 21, 66, 52, 175, 120, 33, 16, 15, 21, 131, 33, 41, 52, 175, 174, 62, 21, 20, 49, 55, 84, 6, 193, 49, 118, 54, 25, 72, 138, 94, 37, 52, 175, 174, 140, 143, 66, 21, 15, 80, 120, 84, 21, 82, 171, 147, 144, 164, 48, 142, 39, 2, 52, 175, 100, 55, 66, 137, 77, 135, 42, 66, 89, 74, 37, 129, 36, 48, 12, 7, 158, 10, 59, 33, 53, 145, 180, 84, 21, 153, 81, 120, 84, 10, 35, 55, 1, 127, 123, 126, 135, 161, 150, 197, 20, 35, 183, 38, 135, 77, 101, 18, 134, 106, 162, 196, 199, 103, 153, 38], [108, 193, 49, 149, 128], [109, 120], 110, [111, 69, 193, 14, 64, 137, 11, 143, 160, 89, 122, 16, 80, 183, 51, 170, 36, 19, 140, 44, 116, 52, 175, 100, 33, 164, 48, 118, 163, 76, 15, 153, 79, 133, 117, 192, 97, 7, 116, 52, 175, 174, 140, 1, 66, 183, 21, 115, 153, 22, 188, 55, 135, 103, 199, 139, 138, 52, 145, 131, 44, 54, 76, 15, 152, 94], [112, 13, 155, 5, 7, 116, 14, 58, 138, 191, 21, 15, 152, 8, 25, 108, 135, 161, 85, 33, 90, 52, 12, 167, 100, 21, 51, 52, 184, 48, 196, 166], 113, [114, 170, 140, 23, 10, 84, 75, 199, 117, 33, 154, 52, 116, 14, 175, 117, 165, 56, 97, 130, 94, 23, 108, 42, 66, 100, 108, 85, 82, 180, 92, 22, 187, 32, 163, 76, 75, 117, 192, 84, 120, 33, 152], 115, [116, 149, 155, 94, 117, 192, 65, 124], [117, 33, 56, 44, 134, 23, 6, 82, 3, 42, 108, 23, 90, 98, 25, 167, 93, 52, 12, 167, 25, 72, 138, 41, 52, 12, 167, 164, 166, 196, 9, 171, 197, 152, 141, 155, 30, 0, 61, 4, 70, 103, 84, 120, 63, 10, 84, 120, 33, 75, 84, 120, 185, 124, 14, 175, 117, 33, 143, 38, 153, 103, 199, 37, 90, 183, 109, 2, 75, 4, 70, 140, 129, 36, 48, 118, 69], [118, 116, 4, 102, 146, 126, 33, 120, 84, 59, 25, 72, 100, 80, 129, 96, 194], [119, 6, 142, 1, 175, 117, 33, 143, 169, 79, 133, 117, 175, 57, 35, 121, 192, 110], [120, 33, 154, 67, 95, 92, 191, 193, 29, 12, 25, 177, 72, 100, 80, 11, 141, 81, 106, 108, 193, 49, 69], [121, 197, 33, 74, 26, 189, 50, 102, 77, 75, 164, 5, 118, 52, 72, 100, 36, 48, 184, 175, 117, 33, 147, 149, 155, 94, 117, 33, 154, 143, 154, 143], 122, [123, 5, 198, 15, 21, 131, 104, 102, 92, 106, 25, 72, 138, 52, 42, 85, 74, 94, 16, 140, 55, 138, 194, 103, 153, 79, 101, 4, 28, 85, 118, 38], 124, [125, 21, 15, 151, 69, 111, 87, 60, 197, 44, 138, 191, 117, 174, 51, 32, 109, 75, 71, 21, 153, 15, 153, 15, 28, 183, 4, 166, 107, 51, 32, 14, 57], 126, [127, 25], 128, 129, 130, [131, 103, 153, 38], [132, 88], 133, [134, 44, 89, 74, 85, 91, 197, 37, 126, 154, 195, 134, 77, 142, 1, 143, 109, 95, 78, 55, 85, 17, 33, 97, 170, 142, 84, 59, 38, 161, 108, 193, 49, 69, 106, 162, 42, 45, 168, 142, 1, 171, 147, 100, 80, 148, 190, 86, 36, 9, 143, 168, 118, 38, 80, 108, 24, 109, 33, 41, 69, 76, 31, 145, 102, 153, 165, 127, 123, 5, 96, 189, 179, 95, 76, 163, 198, 34, 179, 95, 196, 66, 68, 190, 63, 155, 175, 52, 12, 167, 120, 145, 84, 59, 56, 115, 124, 14, 175, 117, 33, 147, 149, 155, 94, 132, 163, 168, 163, 168, 192, 70, 4, 22, 144, 160, 33, 117, 165, 64, 16, 94, 132, 168], [135, 161, 56, 93, 92], [136, 196, 26, 143, 38, 161, 156, 188, 72, 138, 21, 112, 33, 191, 70, 16, 161, 48, 124, 48, 164, 197, 25, 78, 173, 21, 153, 79, 133, 117, 73, 160, 21, 153, 25, 2, 75, 138, 194, 96, 152, 8, 174, 175, 52, 26, 199, 139, 108, 23, 109, 2, 149, 197, 149, 197, 138, 106, 44, 153, 25, 38, 161, 124, 113, 101], [137, 170, 118, 116, 4, 1], 138, 139, [140, 44, 116, 52, 175, 152, 191, 20, 14, 175, 117, 33, 147, 81, 145, 117, 174, 9, 127, 143, 32, 51, 175, 57], [141, 102, 153, 103, 84, 59, 120, 18, 9, 139, 52, 116, 5, 69, 89, 87, 103, 153, 79, 54, 161, 156, 161, 176, 52, 119, 6, 37, 129, 184, 188, 156, 54], [142, 1, 81, 120, 145, 52, 119, 6, 37, 88, 15, 44, 129, 96, 194, 145, 87, 52, 175, 174, 44, 138], 143, [144, 66, 61, 193, 49, 158, 183, 21, 153, 79, 133, 117, 192, 45, 121, 49, 69, 63, 190, 183, 78, 164, 48, 12, 139, 138, 44, 126, 102, 20, 27, 127, 158], [145, 87, 51, 67, 104, 62, 21], [146, 126, 97, 13, 23], [147, 171, 140, 44, 150], [148, 50, 46, 75, 55, 140, 44, 146, 102, 153], [149, 128, 155, 94, 117, 33, 143, 78, 173, 196, 164, 47, 152, 141], [150, 10, 84, 120, 33, 12, 52, 75, 20, 35, 69, 5, 196], 151, [152, 30, 69, 85, 42, 33, 100, 22, 4, 23, 151, 177, 142, 1, 122, 133, 18, 108, 116, 52, 119, 21, 115, 109, 110, 94, 85, 54], [153, 103, 199, 3, 15, 21, 175, 52, 142, 2, 109, 110, 94, 37, 142, 1], [154, 67, 16, 94, 98, 129, 99, 61, 138, 60], 155, [156, 188, 72, 138, 41, 48, 164, 144, 66, 52, 150, 108, 7, 12, 83, 22, 4, 124, 14, 175, 117, 33, 120, 84, 59, 167, 12, 139, 151, 106, 162, 155, 94, 87, 51, 175, 51, 175, 151, 140, 122, 81, 18, 175, 52], 157, 158, [159, 55, 188], [160, 143, 1, 70, 96, 33, 74, 87, 54, 169, 140, 183, 122, 14, 44, 56, 36, 126, 134, 195, 56, 93, 70, 135, 23, 175, 182, 48, 184, 175, 52, 41, 115, 180], 161, 162, [163, 76, 95, 75, 164, 196, 9, 143, 70], [164, 52, 175, 57, 14, 164, 10, 69, 85, 74, 90, 41, 52, 12, 167, 139, 144, 65], [165, 127, 123, 5, 96, 189, 52, 36, 86, 196, 130, 40, 158, 107, 51, 87, 57, 180, 102], 166, [167, 12, 139, 89, 155, 32, 7, 167, 40, 64, 112, 44, 127, 22, 166, 102, 132], [168, 21, 84, 114, 42, 57, 54, 169, 144, 66, 196, 164, 194, 45, 168, 21, 112, 55, 140, 9, 143, 168, 66, 96, 105, 164, 182, 137, 175, 94, 19, 29, 51, 87, 175, 174, 140, 170, 1, 41, 143, 51, 87, 57, 36, 48, 164, 144, 21, 15, 80, 192, 97, 44, 78, 173, 105, 145, 192, 119, 20, 143, 109, 9, 153, 103, 119, 135, 152, 33, 61, 66, 143, 38, 161, 124, 92], 169, [170, 97, 145, 52], [171, 82, 131, 44, 140, 11], 172, [173, 181, 168, 142, 32, 52, 175, 33, 7, 143, 160], [174, 9, 143, 21, 153, 70, 77, 75, 9, 127, 165, 168, 87, 89, 155, 94, 117, 165, 56, 36, 75, 55, 85, 74, 37, 99], [175, 117, 33, 120, 2, 109, 110, 94, 130, 40, 43, 195, 56, 44, 26, 144, 51, 87, 118, 38, 143, 66, 110, 126, 111, 92, 111, 92, 165, 127, 123, 5], [176, 155, 117, 33, 154, 67, 81, 35, 48, 164, 144, 74, 55, 140, 44, 134, 52, 175, 57], 177, 178, 179, [180, 57, 42, 143, 5], 181, [182, 114, 138], [183, 106, 60, 143, 193, 61, 128, 50, 155, 69, 31, 17, 90, 60], [184, 175, 127, 165, 95, 76, 162, 164, 185, 63, 140, 44, 52, 197, 152, 28, 4, 22, 66, 160, 21, 153, 87, 145, 3, 59, 138, 72], [185, 63, 140, 7, 87, 51, 173, 183, 122], [186, 19, 85, 8, 161, 75, 21, 153, 103, 35, 3, 143, 20, 199, 91, 85, 74, 89, 155, 94, 172, 0, 51, 87, 116, 103, 84, 10, 104, 172, 2, 149, 128, 16, 81, 192, 33, 96, 194, 1], [187, 171], [188, 156, 54, 95, 13, 56, 36, 1, 166, 197, 10, 50, 129, 96, 163, 76, 95, 183, 182, 114, 142, 1, 121, 197, 152, 50, 142, 119, 84, 102, 171, 154, 36, 64, 139], 189, [190, 183, 78, 103, 57, 69, 76, 32, 124, 51, 138, 191, 109, 110, 199, 74, 33, 179, 192, 49, 48, 93, 56, 138, 117, 85, 19, 108, 36, 57, 156, 54], 191, [192, 33, 152, 28, 199, 103, 122, 21, 60, 105, 164, 48], [193, 49, 143, 6, 89, 155, 57, 67, 83, 199, 117, 33, 143, 9, 127, 165, 168, 87, 51, 62, 95, 75, 162, 155, 87, 60, 59, 84, 36, 1, 142, 32, 20, 143, 137, 132, 88, 8, 173, 181, 84, 59, 26, 5, 153, 71, 153, 23, 143, 113, 22, 68, 121, 45, 72, 138, 40, 13, 97, 120, 84, 21, 51, 87, 118, 178, 21, 15, 84, 59, 120, 33, 154, 29, 101, 4, 22, 5, 36, 48, 164, 144, 66, 21, 78], 194, [195, 56, 44, 126, 92, 45], [196, 164, 84, 59, 145, 87, 51, 181, 108, 151, 180], [197, 152, 28, 2, 149, 128, 16, 97, 170, 100, 80, 33, 145, 28, 131, 44, 78, 66, 100, 165, 192, 199, 74, 33, 140, 44, 52, 175, 57, 55, 188, 72, 138, 52, 119, 34, 115, 108], [198, 57], [199, 91, 83, 101, 4, 123, 126, 154, 98, 25, 120, 33, 108, 175, 119, 128, 187, 193, 184, 119, 68, 195, 43, 124, 36, 48, 164, 144, 61, 187, 108, 23, 101, 23, 120, 188, 156, 44, 106, 51, 87, 175, 117, 33, 41, 52, 12, 196, 82, 109, 2, 24, 124, 161, 180, 137, 11, 189, 120, 84, 21, 153]]
>>> retrieved_saved[0]
0
>>> retrieved_saved[1]
[]
>>> retrieved_saved[1]
[]
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:181: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 254, in <module>
    retrieved_saved = file_handling.load_retrieved(simulation)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 130, in load_retrieved
    return load_full_dynamics(3, int, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 97, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 90, in load_cue_dynamics
    return tmp[item].astype(dtype)
IndexError: index 3 is out of bounds for axis 0 with size 0
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:182: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
0 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 276, in <module>
    get_mi_crossovers(retrieved_saved, lamb, threshold)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 214, in get_mi_crossovers
    if len(retrieved_saved[cue_ind]) >= 1:
TypeError: object of type 'int' has no len()
>>> retrieved_saved[:10]
[0, [], [2, 24, 166, 89, 12], [3, 143, 66], [4, 184, 175, 117, 33, 145, 37, 74, 135, 59, 82, 175, 52, 35, 20, 27, 111, 124, 14, 175, 117, 33, 147, 143, 42, 66, 61, 77, 75, 78, 143, 9, 155, 141, 102, 33, 12, 69], [5, 26, 199, 119, 182, 164, 56, 44, 134, 23, 120, 25, 98, 13, 97, 177, 10, 52, 12, 139, 3, 138, 52, 12, 95, 76, 20, 143, 196, 55, 113, 4, 23, 120, 75, 5, 188, 72, 25, 167, 178, 10, 84, 120, 33, 154, 67, 16, 103, 84, 164, 163, 142, 85, 21, 89, 155, 57, 158, 107, 51, 87, 175, 131, 44, 146, 193, 49, 149, 128], [6, 143, 196, 21, 17, 125, 87, 175, 182, 48, 164, 144, 66, 40], 7, [8, 85, 17, 129, 82, 131, 99, 152, 49, 118, 12, 52, 116, 7, 87, 51, 67, 80, 74, 55, 189, 21, 189, 33, 133, 136, 107], [9, 127, 37, 165, 37, 165, 102]]
>>> np.array([1])
array([1])
>>> np.array([1]).astype(float)
array([1.])
>>> file_handling.load_text(key+'/dyamics_cue_0.txt')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'key' is not defined
>>> key = simulation
>>> file_handling.load_text(key+'/dyamics_cue_0.txt')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 182, in load_text
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/npyio.py", line 981, in loadtxt
    fh = np.lib._datasource.open(fname, 'rt', encoding=encoding)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/_datasource.py", line 269, in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/_datasource.py", line 623, in open
    raise IOError("%s not found." % path)
OSError: data_analysis/2a123a981c3e2871ff8ff30383ecca93/dyamics_cue_0.txt not found.
>>> file_handling.load_text(key+'/dynamics_cue_0.txt')
array([2.00000000e+00, 6.44774661e-04, 1.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 6.60000000e+01, 6.44774661e-04, 6.03488555e-04])
>>> file_handling.load_text(key+'/dynamics_cue_0.txt').shape
(8,)
>>> len(file_handling.load_text(key+'/dynamics_cue_0.txt').shape)
1
>>> len(file_handling.load_text(key+'/dynamics_cue_1.txt').shape)
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:182: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
1
>>> file_handling.load_text(key+'/dynamics_cue_1.txt').shape
(0,)
>>> np.array([1])
array([1])
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 274, in <module>
    get_mi_crossovers(retrieved_saved, lamb, threshold)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 214, in get_mi_crossovers
    if cue_ind != retrieved_saved[cue_ind][0]:
IndexError: list index out of range
>>> cue
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cue' is not defined
>>> cue_ind
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cue_ind' is not defined
>>> retrieved_saved[1]
[]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
qt5ct: using qt5ct plugin
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... plt.plot(thresholds, mi_low_s - shuffled_low_s, 'g', label='Corrected low')
... plt.plot(thresholds, mi_high_s, ':b', label='Original high')
... plt.plot(thresholds, mi_low_s, ':g', label='Original how')
... plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
... plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
... plt.xlabel('Overlap threshold')
... plt.ylabel('Mutual information in pairs (m=2)')
... plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
... plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, mi_high_s, ':b', label='Original high')
...     plt.plot(thresholds, mi_low_s, ':g', label='Original how')
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.xlabel('Overlap threshold')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     plt.legend()
... plt.tight_layout()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 288, in <module>
    plt.subplot(3,2,ind_sim)
  File "/home/gdlb/.local/lib/python3.6/site-packages/matplotlib/pyplot.py", line 1030, in subplot
    a = fig.add_subplot(*args, **kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/matplotlib/figure.py", line 1419, in add_subplot
    a = subplot_class_factory(projection_class)(self, *args, **kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/matplotlib/axes/_subplots.py", line 66, in __init__
    f"num must be 1 <= num <= {rows*cols}, not {num}")
ValueError: num must be 1 <= num <= 6, not 0
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, mi_high_s, ':b', label='Original high')
...     plt.plot(thresholds, mi_low_s, ':g', label='Original how')
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.xlabel('Overlap threshold')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     plt.legend()
... plt.tight_layout()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, mi_low_s, ':g', label='Original how')
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.xlabel('Overlap threshold')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
... plt.tight_layout()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, mi_high_s, ':b', label='Original high')
...     plt.plot(thresholds, mi_low_s, ':g', label='Original how')
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.xlabel('Overlap threshold')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, mi_high_s, ':b', label='Original high')
...     plt.plot(thresholds, mi_low_s, ':g', label='Original how')
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.xlabel('Overlap threshold')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, mi_high_s, ':b', label='Original high')
...     plt.plot(thresholds, mi_low_s, ':g', label='Original how')
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.xlabel('Overlap threshold')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
... plt.show()
    plt.plot(thresholds, mi_high_s, ':b', label='Original high')
  C-c C-c
Process Python interrompre
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, mi_high_s, ':b', label='Original high')
...     plt.plot(thresholds, mi_low_s, ':g', label='Original how')
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.xlabel('Overlap threshold')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
qt5ct: using qt5ct plugin
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
...     if ind_sim in [2, 5]:
...         plt.xlabel('Overlap threshold')
... 
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
...     if ind_sim in [4, 5]:
...         plt.xlabel('Overlap threshold')
... 
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, shuffled_high_s, '--b', label='Bias high')
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
...     if ind_sim in [4, 5]:
...         plt.xlabel('Overlap threshold')
... 
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.xlim(0, 1)
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
...     if ind_sim in [4, 5]:
...         plt.xlabel('Overlap threshold')
... 
... plt.show()
  C-c C-c
Process Python interrompre
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.xlim(0, 1)
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
...     if ind_sim in [4, 5]:
...         plt.xlabel('Overlap threshold')
... 
... plt.show()
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
19219 4
19203 20
19132 91
18741 482
17990 1233
16625 2598
14387 4836
10365 8858
2599 16624
0 19223
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
qt5ct: using qt5ct plugin
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
39476 109
38685 900
35748 3837
30066 9519
23794 15791
16695 22890
9347 30238
2845 36740
30 39555
0 39585
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
2476 656
1874 1258
1547 1585
1336 1796
1172 1960
972 2160
712 2420
255 2877
0 3132
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0 3132
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.xlim(0, 1)
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
...     if ind_sim in [4, 5]:
...         plt.xlabel('Overlap threshold')
... 
... plt.show()
qt5ct: using qt5ct plugin
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:134: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:144: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:154: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... 
... # Local modules
... ...
...         cpt = 0
...         for ind_cue in range(len(lamb)):
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
>>> plot_lamb_hist(simulation_list)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'plot_lamb_hist' is not defined
>>> plot_lamb_hist_gsln(simulation_list)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'simulation_list' is not defined
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/crossover_histogram.py", line 32, in plot_lamb_hist_gsln
    lamb_1D = np.zeros(event_counter(lamb, p))
TypeError: event_counter() takes 1 positional argument but 2 were given
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... 
... # Local modules
... ...
...         cpt = 0
...         for ind_cue in range(len(lamb)):
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/crossover_histogram.py", line 32, in plot_lamb_hist_gsln
    lamb_1D = np.zeros(file_handling.event_counter(lamb, p))
AttributeError: module 'file_handling' has no attribute 'event_counter'
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... 
... # Local modules
... ...
...         cpt = 0
...         for ind_cue in range(len(lamb)):
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... 
... # Local modules
... ...
...         cpt = 0
...         for ind_cue in range(len(lamb)):
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/crossover_histogram.py", line 38, in plot_lamb_hist_gsln
    sns.distplot(lamb_1D)
NameError: name 'sns' is not defined
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...         cpt = 0
...         for ind_cue in range(len(lamb)):
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
qt5ct: using qt5ct plugin
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/crossover_histogram.py", line 36, in plot_lamb_hist_gsln
    labels.append(r"$g_A$=%.2f, w=%.1f, %d transitions" % (g_A, w, file_handling.event_counter(lamb)))
TypeError: event_counter() missing 1 required positional argument: 'p'
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> lamb[0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lamb' is not defined
>>> simulation_key = simulation_list[ind_key]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'simulation_list' is not defined
>>> simulation_key = simulations[0]
>>> simulation_key = simulations[2]
>>> plot_lamb_hist_gsln(simulations)  C-c C-c  C-c C-cplot_lamb_hist_gsln(simulations)  C-c C-c  C-c C-c
Error in sys.excepthook:
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/apport_python_hook.py", line 34, in apport_excepthook
    def apport_excepthook(exc_type, exc_obj, exc_tb):
KeyboardInterrupt

Original exception was:
  File "<stdin>", line 1
    plot_lamb_hist_gsln(simulations)  C-c C-c  C-c C-c
                                      ^
SyntaxError: invalid syntax
>>> lamb = file_handling.load_overlap(simulation_key)
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> lamb[0]
[0.000642419894379916]
>>> plot_lamb_hist(simulation_list)plot_lamb_hist(simulation_list)
  File "<stdin>", line 1
    plot_lamb_hist(simulation_list)plot_lamb_hist(simulation_list)
                                                ^
SyntaxError: invalid syntax
>>> retrieved_saved = file_handling.load_retrieved(simulation_key)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> retrieved_saved[0]
[0]
>>> retrieved_saved[1]
[]
>>> retrieved_saved[2]
[2]
>>> retrieved_saved[3]
[3]
>>> retrieved_saved[4]
[4]
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> plot_lamb_hist(simulation_list)plot_lamb_hist(simulation_list)
  File "<stdin>", line 1
    plot_lamb_hist(simulation_list)plot_lamb_hist(simulation_list)
                                                ^
SyntaxError: invalid syntax
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_0.txt"
  return(np.loadtxt(data_path + file_name))
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_2.txt"
  return(np.loadtxt(data_path + file_name))
3
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_3.txt"
  return(np.loadtxt(data_path + file_name))
4
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_4.txt"
  return(np.loadtxt(data_path + file_name))
5
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_5.txt"
  return(np.loadtxt(data_path + file_name))
6
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_6.txt"
  return(np.loadtxt(data_path + file_name))
7
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_7.txt"
  return(np.loadtxt(data_path + file_name))
8
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_8.txt"
  return(np.loadtxt(data_path + file_name))
9
10
11
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_11.txt"
  return(np.loadtxt(data_path + file_name))
12
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_12.txt"
  return(np.loadtxt(data_path + file_name))
13
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_13.txt"
  return(np.loadtxt(data_path + file_name))
14
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_14.txt"
  return(np.loadtxt(data_path + file_name))
15
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_15.txt"
  return(np.loadtxt(data_path + file_name))
16
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_16.txt"
  return(np.loadtxt(data_path + file_name))
17
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_17.txt"
  return(np.loadtxt(data_path + file_name))
18
19
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_19.txt"
  return(np.loadtxt(data_path + file_name))
20
21
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_21.txt"
  return(np.loadtxt(data_path + file_name))
22
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_22.txt"
  return(np.loadtxt(data_path + file_name))
23
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_23.txt"
  return(np.loadtxt(data_path + file_name))
24
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_24.txt"
  return(np.loadtxt(data_path + file_name))
25
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_25.txt"
  return(np.loadtxt(data_path + file_name))
26
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_26.txt"
  return(np.loadtxt(data_path + file_name))
27
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_27.txt"
  return(np.loadtxt(data_path + file_name))
28
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_28.txt"
  return(np.loadtxt(data_path + file_name))
29
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_29.txt"
  return(np.loadtxt(data_path + file_name))
30
31
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_31.txt"
  return(np.loadtxt(data_path + file_name))
32
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_32.txt"
  return(np.loadtxt(data_path + file_name))
33
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_33.txt"
  return(np.loadtxt(data_path + file_name))
34
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_34.txt"
  return(np.loadtxt(data_path + file_name))
35
36
37
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_37.txt"
  return(np.loadtxt(data_path + file_name))
38
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_38.txt"
  return(np.loadtxt(data_path + file_name))
39
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_39.txt"
  return(np.loadtxt(data_path + file_name))
40
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_40.txt"
  return(np.loadtxt(data_path + file_name))
41
42
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_42.txt"
  return(np.loadtxt(data_path + file_name))
43
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_43.txt"
  return(np.loadtxt(data_path + file_name))
44
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_44.txt"
  return(np.loadtxt(data_path + file_name))
45
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_45.txt"
  return(np.loadtxt(data_path + file_name))
46
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_46.txt"
  return(np.loadtxt(data_path + file_name))
47
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_47.txt"
  return(np.loadtxt(data_path + file_name))
48
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_48.txt"
  return(np.loadtxt(data_path + file_name))
49
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_49.txt"
  return(np.loadtxt(data_path + file_name))
50
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_50.txt"
  return(np.loadtxt(data_path + file_name))
51
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_51.txt"
  return(np.loadtxt(data_path + file_name))
52
53
54
55
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_55.txt"
  return(np.loadtxt(data_path + file_name))
56
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_56.txt"
  return(np.loadtxt(data_path + file_name))
57
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_57.txt"
  return(np.loadtxt(data_path + file_name))
58
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_58.txt"
  return(np.loadtxt(data_path + file_name))
59
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_59.txt"
  return(np.loadtxt(data_path + file_name))
60
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_60.txt"
  return(np.loadtxt(data_path + file_name))
61
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_61.txt"
  return(np.loadtxt(data_path + file_name))
62
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_62.txt"
  return(np.loadtxt(data_path + file_name))
63
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_63.txt"
  return(np.loadtxt(data_path + file_name))
64
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_64.txt"
  return(np.loadtxt(data_path + file_name))
65
66
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_66.txt"
  return(np.loadtxt(data_path + file_name))
67
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_67.txt"
  return(np.loadtxt(data_path + file_name))
68
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_68.txt"
  return(np.loadtxt(data_path + file_name))
69
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_69.txt"
  return(np.loadtxt(data_path + file_name))
70
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_70.txt"
  return(np.loadtxt(data_path + file_name))
71
72
73
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_73.txt"
  return(np.loadtxt(data_path + file_name))
74
75
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_75.txt"
  return(np.loadtxt(data_path + file_name))
76
77
78
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_78.txt"
  return(np.loadtxt(data_path + file_name))
79
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_79.txt"
  return(np.loadtxt(data_path + file_name))
80
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_80.txt"
  return(np.loadtxt(data_path + file_name))
81
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_81.txt"
  return(np.loadtxt(data_path + file_name))
82
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_82.txt"
  return(np.loadtxt(data_path + file_name))
83
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_83.txt"
  return(np.loadtxt(data_path + file_name))
84
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_84.txt"
  return(np.loadtxt(data_path + file_name))
85
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_85.txt"
  return(np.loadtxt(data_path + file_name))
86
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_86.txt"
  return(np.loadtxt(data_path + file_name))
87
88
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_88.txt"
  return(np.loadtxt(data_path + file_name))
89
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_89.txt"
  return(np.loadtxt(data_path + file_name))
90
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_90.txt"
  return(np.loadtxt(data_path + file_name))
91
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_91.txt"
  return(np.loadtxt(data_path + file_name))
92
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_92.txt"
  return(np.loadtxt(data_path + file_name))
93
94
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_94.txt"
  return(np.loadtxt(data_path + file_name))
95
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_95.txt"
  return(np.loadtxt(data_path + file_name))
96
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_96.txt"
  return(np.loadtxt(data_path + file_name))
97
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_97.txt"
  return(np.loadtxt(data_path + file_name))
98
99
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_99.txt"
  return(np.loadtxt(data_path + file_name))
100
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_100.txt"
  return(np.loadtxt(data_path + file_name))
101
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_101.txt"
  return(np.loadtxt(data_path + file_name))
102
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_102.txt"
  return(np.loadtxt(data_path + file_name))
103
104
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_104.txt"
  return(np.loadtxt(data_path + file_name))
105
106
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_106.txt"
  return(np.loadtxt(data_path + file_name))
107
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_107.txt"
  return(np.loadtxt(data_path + file_name))
108
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_108.txt"
  return(np.loadtxt(data_path + file_name))
109
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_109.txt"
  return(np.loadtxt(data_path + file_name))
110
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_110.txt"
  return(np.loadtxt(data_path + file_name))
111
112
113
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_113.txt"
  return(np.loadtxt(data_path + file_name))
114
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_114.txt"
  return(np.loadtxt(data_path + file_name))
115
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_115.txt"
  return(np.loadtxt(data_path + file_name))
116
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_116.txt"
  return(np.loadtxt(data_path + file_name))
117
118
119
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_119.txt"
  return(np.loadtxt(data_path + file_name))
120
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_120.txt"
  return(np.loadtxt(data_path + file_name))
121
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_121.txt"
  return(np.loadtxt(data_path + file_name))
122
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_122.txt"
  return(np.loadtxt(data_path + file_name))
123
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_123.txt"
  return(np.loadtxt(data_path + file_name))
124
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_124.txt"
  return(np.loadtxt(data_path + file_name))
125
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_125.txt"
  return(np.loadtxt(data_path + file_name))
126
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_126.txt"
  return(np.loadtxt(data_path + file_name))
127
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_127.txt"
  return(np.loadtxt(data_path + file_name))
128
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_128.txt"
  return(np.loadtxt(data_path + file_name))
129
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_129.txt"
  return(np.loadtxt(data_path + file_name))
130
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_130.txt"
  return(np.loadtxt(data_path + file_name))
131
132
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_132.txt"
  return(np.loadtxt(data_path + file_name))
133
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_133.txt"
  return(np.loadtxt(data_path + file_name))
134
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_134.txt"
  return(np.loadtxt(data_path + file_name))
135
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_135.txt"
  return(np.loadtxt(data_path + file_name))
136
137
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_137.txt"
  return(np.loadtxt(data_path + file_name))
138
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_138.txt"
  return(np.loadtxt(data_path + file_name))
139
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_139.txt"
  return(np.loadtxt(data_path + file_name))
140
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_140.txt"
  return(np.loadtxt(data_path + file_name))
141
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_141.txt"
  return(np.loadtxt(data_path + file_name))
142
143
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_143.txt"
  return(np.loadtxt(data_path + file_name))
144
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_144.txt"
  return(np.loadtxt(data_path + file_name))
145
146
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_146.txt"
  return(np.loadtxt(data_path + file_name))
147
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_147.txt"
  return(np.loadtxt(data_path + file_name))
148
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_148.txt"
  return(np.loadtxt(data_path + file_name))
149
150
151
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_151.txt"
  return(np.loadtxt(data_path + file_name))
152
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_152.txt"
  return(np.loadtxt(data_path + file_name))
153
154
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_154.txt"
  return(np.loadtxt(data_path + file_name))
155
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_155.txt"
  return(np.loadtxt(data_path + file_name))
156
157
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_157.txt"
  return(np.loadtxt(data_path + file_name))
158
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_158.txt"
  return(np.loadtxt(data_path + file_name))
159
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_159.txt"
  return(np.loadtxt(data_path + file_name))
160
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_160.txt"
  return(np.loadtxt(data_path + file_name))
161
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_161.txt"
  return(np.loadtxt(data_path + file_name))
162
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_162.txt"
  return(np.loadtxt(data_path + file_name))
163
164
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_164.txt"
  return(np.loadtxt(data_path + file_name))
165
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_165.txt"
  return(np.loadtxt(data_path + file_name))
166
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_166.txt"
  return(np.loadtxt(data_path + file_name))
167
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_167.txt"
  return(np.loadtxt(data_path + file_name))
168
169
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_169.txt"
  return(np.loadtxt(data_path + file_name))
170
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_170.txt"
  return(np.loadtxt(data_path + file_name))
171
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_171.txt"
  return(np.loadtxt(data_path + file_name))
172
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_172.txt"
  return(np.loadtxt(data_path + file_name))
173
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_173.txt"
  return(np.loadtxt(data_path + file_name))
174
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_174.txt"
  return(np.loadtxt(data_path + file_name))
175
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_175.txt"
  return(np.loadtxt(data_path + file_name))
176
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_176.txt"
  return(np.loadtxt(data_path + file_name))
177
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_177.txt"
  return(np.loadtxt(data_path + file_name))
178
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_178.txt"
  return(np.loadtxt(data_path + file_name))
179
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_179.txt"
  return(np.loadtxt(data_path + file_name))
180
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_180.txt"
  return(np.loadtxt(data_path + file_name))
181
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_181.txt"
  return(np.loadtxt(data_path + file_name))
182
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_182.txt"
  return(np.loadtxt(data_path + file_name))
183
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_183.txt"
  return(np.loadtxt(data_path + file_name))
184
185
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_185.txt"
  return(np.loadtxt(data_path + file_name))
186
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_186.txt"
  return(np.loadtxt(data_path + file_name))
187
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_187.txt"
  return(np.loadtxt(data_path + file_name))
188
189
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_189.txt"
  return(np.loadtxt(data_path + file_name))
190
191
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_191.txt"
  return(np.loadtxt(data_path + file_name))
192
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_192.txt"
  return(np.loadtxt(data_path + file_name))
193
194
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_194.txt"
  return(np.loadtxt(data_path + file_name))
195
196
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_196.txt"
  return(np.loadtxt(data_path + file_name))
197
198
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_198.txt"
  return(np.loadtxt(data_path + file_name))
199
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_199.txt"
  return(np.loadtxt(data_path + file_name))
>>> plot_lamb_hist_gsln(simulations)
ind_key = 0
0
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_0.txt"
  return(np.loadtxt(data_path + file_name))
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_2.txt"
  return(np.loadtxt(data_path + file_name))
3
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_3.txt"
  return(np.loadtxt(data_path + file_name))
4
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_4.txt"
  return(np.loadtxt(data_path + file_name))
5
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_5.txt"
  return(np.loadtxt(data_path + file_name))
6
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_6.txt"
  return(np.loadtxt(data_path + file_name))
7
8
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_8.txt"
  return(np.loadtxt(data_path + file_name))
9
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_9.txt"
  return(np.loadtxt(data_path + file_name))
10
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_10.txt"
  return(np.loadtxt(data_path + file_name))
11
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_11.txt"
  return(np.loadtxt(data_path + file_name))
12
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_12.txt"
  return(np.loadtxt(data_path + file_name))
13
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_13.txt"
  return(np.loadtxt(data_path + file_name))
14
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_14.txt"
  return(np.loadtxt(data_path + file_name))
15
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_15.txt"
  return(np.loadtxt(data_path + file_name))
16
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_16.txt"
  return(np.loadtxt(data_path + file_name))
17
18
19
20
21
22
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_22.txt"
  return(np.loadtxt(data_path + file_name))
23
24
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_24.txt"
  return(np.loadtxt(data_path + file_name))
25
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_25.txt"
  return(np.loadtxt(data_path + file_name))
26
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_26.txt"
  return(np.loadtxt(data_path + file_name))
27
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_27.txt"
  return(np.loadtxt(data_path + file_name))
28
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_28.txt"
  return(np.loadtxt(data_path + file_name))
29
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_29.txt"
  return(np.loadtxt(data_path + file_name))
30
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_30.txt"
  return(np.loadtxt(data_path + file_name))
31
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_31.txt"
  return(np.loadtxt(data_path + file_name))
32
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_32.txt"
  return(np.loadtxt(data_path + file_name))
33
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_33.txt"
  return(np.loadtxt(data_path + file_name))
34
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_34.txt"
  return(np.loadtxt(data_path + file_name))
35
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_35.txt"
  return(np.loadtxt(data_path + file_name))
36
37
38
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_38.txt"
  return(np.loadtxt(data_path + file_name))
39
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_39.txt"
  return(np.loadtxt(data_path + file_name))
40
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_40.txt"
  return(np.loadtxt(data_path + file_name))
41
42
43
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_43.txt"
  return(np.loadtxt(data_path + file_name))
44
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_44.txt"
  return(np.loadtxt(data_path + file_name))
45
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_45.txt"
  return(np.loadtxt(data_path + file_name))
46
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_46.txt"
  return(np.loadtxt(data_path + file_name))
47
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_47.txt"
  return(np.loadtxt(data_path + file_name))
48
49
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_49.txt"
  return(np.loadtxt(data_path + file_name))
50
51
52
53
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_53.txt"
  return(np.loadtxt(data_path + file_name))
54
55
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_55.txt"
  return(np.loadtxt(data_path + file_name))
56
57
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_57.txt"
  return(np.loadtxt(data_path + file_name))
58
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_58.txt"
  return(np.loadtxt(data_path + file_name))
59
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_59.txt"
  return(np.loadtxt(data_path + file_name))
60
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_60.txt"
  return(np.loadtxt(data_path + file_name))
61
62
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_62.txt"
  return(np.loadtxt(data_path + file_name))
63
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_63.txt"
  return(np.loadtxt(data_path + file_name))
64
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_64.txt"
  return(np.loadtxt(data_path + file_name))
65
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_65.txt"
  return(np.loadtxt(data_path + file_name))
66
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_66.txt"
  return(np.loadtxt(data_path + file_name))
67
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_67.txt"
  return(np.loadtxt(data_path + file_name))
68
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_68.txt"
  return(np.loadtxt(data_path + file_name))
69
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_69.txt"
  return(np.loadtxt(data_path + file_name))
70
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_70.txt"
  return(np.loadtxt(data_path + file_name))
71
72
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_72.txt"
  return(np.loadtxt(data_path + file_name))
73
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_73.txt"
  return(np.loadtxt(data_path + file_name))
74
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_74.txt"
  return(np.loadtxt(data_path + file_name))
75
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_75.txt"
  return(np.loadtxt(data_path + file_name))
76
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_76.txt"
  return(np.loadtxt(data_path + file_name))
77
78
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_78.txt"
  return(np.loadtxt(data_path + file_name))
79
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_79.txt"
  return(np.loadtxt(data_path + file_name))
80
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_80.txt"
  return(np.loadtxt(data_path + file_name))
81
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_81.txt"
  return(np.loadtxt(data_path + file_name))
82
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_82.txt"
  return(np.loadtxt(data_path + file_name))
83
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_83.txt"
  return(np.loadtxt(data_path + file_name))
84
85
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_85.txt"
  return(np.loadtxt(data_path + file_name))
86
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_86.txt"
  return(np.loadtxt(data_path + file_name))
87
88
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_88.txt"
  return(np.loadtxt(data_path + file_name))
89
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_89.txt"
  return(np.loadtxt(data_path + file_name))
90
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_90.txt"
  return(np.loadtxt(data_path + file_name))
91
92
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_92.txt"
  return(np.loadtxt(data_path + file_name))
93
94
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_94.txt"
  return(np.loadtxt(data_path + file_name))
95
96
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_96.txt"
  return(np.loadtxt(data_path + file_name))
97
98
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_98.txt"
  return(np.loadtxt(data_path + file_name))
99
100
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_100.txt"
  return(np.loadtxt(data_path + file_name))
101
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_101.txt"
  return(np.loadtxt(data_path + file_name))
102
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_102.txt"
  return(np.loadtxt(data_path + file_name))
103
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_103.txt"
  return(np.loadtxt(data_path + file_name))
104
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_104.txt"
  return(np.loadtxt(data_path + file_name))
105
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_105.txt"
  return(np.loadtxt(data_path + file_name))
106
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_106.txt"
  return(np.loadtxt(data_path + file_name))
107
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_107.txt"
  return(np.loadtxt(data_path + file_name))
108
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_108.txt"
  return(np.loadtxt(data_path + file_name))
109
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_109.txt"
  return(np.loadtxt(data_path + file_name))
110
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_110.txt"
  return(np.loadtxt(data_path + file_name))
111
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_111.txt"
  return(np.loadtxt(data_path + file_name))
112
113
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_113.txt"
  return(np.loadtxt(data_path + file_name))
114
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_114.txt"
  return(np.loadtxt(data_path + file_name))
115
116
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_116.txt"
  return(np.loadtxt(data_path + file_name))
117
118
119
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_119.txt"
  return(np.loadtxt(data_path + file_name))
120
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_120.txt"
  return(np.loadtxt(data_path + file_name))
121
122
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_122.txt"
  return(np.loadtxt(data_path + file_name))
123
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_123.txt"
  return(np.loadtxt(data_path + file_name))
124
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_124.txt"
  return(np.loadtxt(data_path + file_name))
125
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_125.txt"
  return(np.loadtxt(data_path + file_name))
126
127
128
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_128.txt"
  return(np.loadtxt(data_path + file_name))
129
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_129.txt"
  return(np.loadtxt(data_path + file_name))
130
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_130.txt"
  return(np.loadtxt(data_path + file_name))
131
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_131.txt"
  return(np.loadtxt(data_path + file_name))
132
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_132.txt"
  return(np.loadtxt(data_path + file_name))
133
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_133.txt"
  return(np.loadtxt(data_path + file_name))
134
135
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_135.txt"
  return(np.loadtxt(data_path + file_name))
136
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_136.txt"
  return(np.loadtxt(data_path + file_name))
137
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_137.txt"
  return(np.loadtxt(data_path + file_name))
138
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_138.txt"
  return(np.loadtxt(data_path + file_name))
139
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_139.txt"
  return(np.loadtxt(data_path + file_name))
140
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_140.txt"
  return(np.loadtxt(data_path + file_name))
141
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_141.txt"
  return(np.loadtxt(data_path + file_name))
142
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_142.txt"
  return(np.loadtxt(data_path + file_name))
143
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_143.txt"
  return(np.loadtxt(data_path + file_name))
144
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_144.txt"
  return(np.loadtxt(data_path + file_name))
145
146
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_146.txt"
  return(np.loadtxt(data_path + file_name))
147
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_147.txt"
  return(np.loadtxt(data_path + file_name))
148
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_148.txt"
  return(np.loadtxt(data_path + file_name))
149
150
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_150.txt"
  return(np.loadtxt(data_path + file_name))
151
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_151.txt"
  return(np.loadtxt(data_path + file_name))
152
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_152.txt"
  return(np.loadtxt(data_path + file_name))
153
154
155
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_155.txt"
  return(np.loadtxt(data_path + file_name))
156
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_156.txt"
  return(np.loadtxt(data_path + file_name))
157
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_157.txt"
  return(np.loadtxt(data_path + file_name))
158
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_158.txt"
  return(np.loadtxt(data_path + file_name))
159
160
161
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_161.txt"
  return(np.loadtxt(data_path + file_name))
162
163
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_163.txt"
  return(np.loadtxt(data_path + file_name))
164
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_164.txt"
  return(np.loadtxt(data_path + file_name))
165
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_165.txt"
  return(np.loadtxt(data_path + file_name))
166
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_166.txt"
  return(np.loadtxt(data_path + file_name))
167
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_167.txt"
  return(np.loadtxt(data_path + file_name))
168
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_168.txt"
  return(np.loadtxt(data_path + file_name))
169
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_169.txt"
  return(np.loadtxt(data_path + file_name))
170
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_170.txt"
  return(np.loadtxt(data_path + file_name))
171
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_171.txt"
  return(np.loadtxt(data_path + file_name))
172
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_172.txt"
  return(np.loadtxt(data_path + file_name))
173
174
175
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_175.txt"
  return(np.loadtxt(data_path + file_name))
176
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_176.txt"
  return(np.loadtxt(data_path + file_name))
177
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_177.txt"
  return(np.loadtxt(data_path + file_name))
178
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_178.txt"
  return(np.loadtxt(data_path + file_name))
179
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_179.txt"
  return(np.loadtxt(data_path + file_name))
180
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_180.txt"
  return(np.loadtxt(data_path + file_name))
181
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_181.txt"
  return(np.loadtxt(data_path + file_name))
182
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_182.txt"
  return(np.loadtxt(data_path + file_name))
183
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_183.txt"
  return(np.loadtxt(data_path + file_name))
184
185
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_185.txt"
  return(np.loadtxt(data_path + file_name))
186
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_186.txt"
  return(np.loadtxt(data_path + file_name))
187
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_187.txt"
  return(np.loadtxt(data_path + file_name))
188
189
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_189.txt"
  return(np.loadtxt(data_path + file_name))
190
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_190.txt"
  return(np.loadtxt(data_path + file_name))
191
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_191.txt"
  return(np.loadtxt(data_path + file_name))
192
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_192.txt"
  return(np.loadtxt(data_path + file_name))
193
194
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_194.txt"
  return(np.loadtxt(data_path + file_name))
195
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_195.txt"
  return(np.loadtxt(data_path + file_name))
196
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_196.txt"
  return(np.loadtxt(data_path + file_name))
197
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_197.txt"
  return(np.loadtxt(data_path + file_name))
198
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_198.txt"
  return(np.loadtxt(data_path + file_name))
199
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_199.txt"
  return(np.loadtxt(data_path + file_name))
ind_key = 1
0
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_0.txt"
  return(np.loadtxt(data_path + file_name))
1
2
3
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_3.txt"
  return(np.loadtxt(data_path + file_name))
4
5
6
7
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_7.txt"
  return(np.loadtxt(data_path + file_name))
8
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_8.txt"
  return(np.loadtxt(data_path + file_name))
9
10
11
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_11.txt"
  return(np.loadtxt(data_path + file_name))
12
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_12.txt"
  return(np.loadtxt(data_path + file_name))
13
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_13.txt"
  return(np.loadtxt(data_path + file_name))
14
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_14.txt"
  return(np.loadtxt(data_path + file_name))
15
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_15.txt"
  return(np.loadtxt(data_path + file_name))
16
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_16.txt"
  return(np.loadtxt(data_path + file_name))
17
18
19
20
21
22
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_22.txt"
  return(np.loadtxt(data_path + file_name))
23
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_23.txt"
  return(np.loadtxt(data_path + file_name))
24
25
26
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_26.txt"
  return(np.loadtxt(data_path + file_name))
27
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_27.txt"
  return(np.loadtxt(data_path + file_name))
28
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_28.txt"
  return(np.loadtxt(data_path + file_name))
29
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_29.txt"
  return(np.loadtxt(data_path + file_name))
30
31
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_31.txt"
  return(np.loadtxt(data_path + file_name))
32
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_32.txt"
  return(np.loadtxt(data_path + file_name))
33
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_33.txt"
  return(np.loadtxt(data_path + file_name))
34
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_34.txt"
  return(np.loadtxt(data_path + file_name))
35
36
37
38
39
40
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_40.txt"
  return(np.loadtxt(data_path + file_name))
41
42
43
44
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_44.txt"
  return(np.loadtxt(data_path + file_name))
45
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_45.txt"
  return(np.loadtxt(data_path + file_name))
46
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_46.txt"
  return(np.loadtxt(data_path + file_name))
47
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_47.txt"
  return(np.loadtxt(data_path + file_name))
48
49
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_49.txt"
  return(np.loadtxt(data_path + file_name))
50
51
52
53
54
55
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_55.txt"
  return(np.loadtxt(data_path + file_name))
56
57
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_57.txt"
  return(np.loadtxt(data_path + file_name))
58
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_58.txt"
  return(np.loadtxt(data_path + file_name))
59
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_59.txt"
  return(np.loadtxt(data_path + file_name))
60
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_60.txt"
  return(np.loadtxt(data_path + file_name))
61
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_61.txt"
  return(np.loadtxt(data_path + file_name))
62
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_62.txt"
  return(np.loadtxt(data_path + file_name))
63
64
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_64.txt"
  return(np.loadtxt(data_path + file_name))
65
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_65.txt"
  return(np.loadtxt(data_path + file_name))
66
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_66.txt"
  return(np.loadtxt(data_path + file_name))
67
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_67.txt"
  return(np.loadtxt(data_path + file_name))
68
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_68.txt"
  return(np.loadtxt(data_path + file_name))
69
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_69.txt"
  return(np.loadtxt(data_path + file_name))
70
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_70.txt"
  return(np.loadtxt(data_path + file_name))
71
72
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_72.txt"
  return(np.loadtxt(data_path + file_name))
73
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_73.txt"
  return(np.loadtxt(data_path + file_name))
74
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_74.txt"
  return(np.loadtxt(data_path + file_name))
75
76
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_76.txt"
  return(np.loadtxt(data_path + file_name))
77
78
79
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_79.txt"
  return(np.loadtxt(data_path + file_name))
80
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_80.txt"
  return(np.loadtxt(data_path + file_name))
81
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_81.txt"
  return(np.loadtxt(data_path + file_name))
82
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_82.txt"
  return(np.loadtxt(data_path + file_name))
83
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_83.txt"
  return(np.loadtxt(data_path + file_name))
84
85
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_85.txt"
  return(np.loadtxt(data_path + file_name))
86
87
88
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_88.txt"
  return(np.loadtxt(data_path + file_name))
89
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_89.txt"
  return(np.loadtxt(data_path + file_name))
90
91
92
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_92.txt"
  return(np.loadtxt(data_path + file_name))
93
94
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_94.txt"
  return(np.loadtxt(data_path + file_name))
95
96
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_96.txt"
  return(np.loadtxt(data_path + file_name))
97
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_97.txt"
  return(np.loadtxt(data_path + file_name))
98
99
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_99.txt"
  return(np.loadtxt(data_path + file_name))
100
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_100.txt"
  return(np.loadtxt(data_path + file_name))
101
102
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_102.txt"
  return(np.loadtxt(data_path + file_name))
103
104
105
106
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_106.txt"
  return(np.loadtxt(data_path + file_name))
107
108
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_108.txt"
  return(np.loadtxt(data_path + file_name))
109
110
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_110.txt"
  return(np.loadtxt(data_path + file_name))
111
112
113
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_113.txt"
  return(np.loadtxt(data_path + file_name))
114
115
116
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_116.txt"
  return(np.loadtxt(data_path + file_name))
117
118
119
120
121
122
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_122.txt"
  return(np.loadtxt(data_path + file_name))
123
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_123.txt"
  return(np.loadtxt(data_path + file_name))
124
125
126
127
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_127.txt"
  return(np.loadtxt(data_path + file_name))
128
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_128.txt"
  return(np.loadtxt(data_path + file_name))
129
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_129.txt"
  return(np.loadtxt(data_path + file_name))
130
131
132
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_132.txt"
  return(np.loadtxt(data_path + file_name))
133
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_133.txt"
  return(np.loadtxt(data_path + file_name))
134
135
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_135.txt"
  return(np.loadtxt(data_path + file_name))
136
137
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_137.txt"
  return(np.loadtxt(data_path + file_name))
138
139
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_139.txt"
  return(np.loadtxt(data_path + file_name))
140
141
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_141.txt"
  return(np.loadtxt(data_path + file_name))
142
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_142.txt"
  return(np.loadtxt(data_path + file_name))
143
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_143.txt"
  return(np.loadtxt(data_path + file_name))
144
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_144.txt"
  return(np.loadtxt(data_path + file_name))
145
146
147
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_147.txt"
  return(np.loadtxt(data_path + file_name))
148
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_148.txt"
  return(np.loadtxt(data_path + file_name))
149
150
151
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_151.txt"
  return(np.loadtxt(data_path + file_name))
152
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_152.txt"
  return(np.loadtxt(data_path + file_name))
153
154
155
156
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_156.txt"
  return(np.loadtxt(data_path + file_name))
157
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_157.txt"
  return(np.loadtxt(data_path + file_name))
158
159
160
161
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_161.txt"
  return(np.loadtxt(data_path + file_name))
162
163
164
165
166
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_166.txt"
  return(np.loadtxt(data_path + file_name))
167
168
169
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_169.txt"
  return(np.loadtxt(data_path + file_name))
170
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_170.txt"
  return(np.loadtxt(data_path + file_name))
171
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_171.txt"
  return(np.loadtxt(data_path + file_name))
172
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_172.txt"
  return(np.loadtxt(data_path + file_name))
173
174
175
176
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_176.txt"
  return(np.loadtxt(data_path + file_name))
177
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_177.txt"
  return(np.loadtxt(data_path + file_name))
178
179
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_179.txt"
  return(np.loadtxt(data_path + file_name))
180
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_180.txt"
  return(np.loadtxt(data_path + file_name))
181
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_181.txt"
  return(np.loadtxt(data_path + file_name))
182
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_182.txt"
  return(np.loadtxt(data_path + file_name))
183
184
185
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_185.txt"
  return(np.loadtxt(data_path + file_name))
186
187
188
189
190
191
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_191.txt"
  return(np.loadtxt(data_path + file_name))
192
193
194
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_194.txt"
  return(np.loadtxt(data_path + file_name))
195
196
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_196.txt"
  return(np.loadtxt(data_path + file_name))
197
198
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_198.txt"
  return(np.loadtxt(data_path + file_name))
199
ind_key = 2
0
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_0.txt"
  return(np.loadtxt(data_path + file_name))
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_2.txt"
  return(np.loadtxt(data_path + file_name))
3
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_3.txt"
  return(np.loadtxt(data_path + file_name))
4
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_4.txt"
  return(np.loadtxt(data_path + file_name))
5
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_5.txt"
  return(np.loadtxt(data_path + file_name))
6
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_6.txt"
  return(np.loadtxt(data_path + file_name))
7
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_7.txt"
  return(np.loadtxt(data_path + file_name))
8
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_8.txt"
  return(np.loadtxt(data_path + file_name))
9
10
11
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_11.txt"
  return(np.loadtxt(data_path + file_name))
12
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_12.txt"
  return(np.loadtxt(data_path + file_name))
13
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_13.txt"
  return(np.loadtxt(data_path + file_name))
14
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_14.txt"
  return(np.loadtxt(data_path + file_name))
15
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_15.txt"
  return(np.loadtxt(data_path + file_name))
16
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_16.txt"
  return(np.loadtxt(data_path + file_name))
17
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_17.txt"
  return(np.loadtxt(data_path + file_name))
18
19
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_19.txt"
  return(np.loadtxt(data_path + file_name))
20
21
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_21.txt"
  return(np.loadtxt(data_path + file_name))
22
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_22.txt"
  return(np.loadtxt(data_path + file_name))
23
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_23.txt"
  return(np.loadtxt(data_path + file_name))
24
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_24.txt"
  return(np.loadtxt(data_path + file_name))
25
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_25.txt"
  return(np.loadtxt(data_path + file_name))
26
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_26.txt"
  return(np.loadtxt(data_path + file_name))
27
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_27.txt"
  return(np.loadtxt(data_path + file_name))
28
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_28.txt"
  return(np.loadtxt(data_path + file_name))
29
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_29.txt"
  return(np.loadtxt(data_path + file_name))
30
31
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_31.txt"
  return(np.loadtxt(data_path + file_name))
32
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_32.txt"
  return(np.loadtxt(data_path + file_name))
33
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_33.txt"
  return(np.loadtxt(data_path + file_name))
34
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_34.txt"
  return(np.loadtxt(data_path + file_name))
35
36
37
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_37.txt"
  return(np.loadtxt(data_path + file_name))
38
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_38.txt"
  return(np.loadtxt(data_path + file_name))
39
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_39.txt"
  return(np.loadtxt(data_path + file_name))
40
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_40.txt"
  return(np.loadtxt(data_path + file_name))
41
42
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_42.txt"
  return(np.loadtxt(data_path + file_name))
43
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_43.txt"
  return(np.loadtxt(data_path + file_name))
44
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_44.txt"
  return(np.loadtxt(data_path + file_name))
45
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_45.txt"
  return(np.loadtxt(data_path + file_name))
46
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_46.txt"
  return(np.loadtxt(data_path + file_name))
47
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_47.txt"
  return(np.loadtxt(data_path + file_name))
48
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_48.txt"
  return(np.loadtxt(data_path + file_name))
49
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_49.txt"
  return(np.loadtxt(data_path + file_name))
50
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_50.txt"
  return(np.loadtxt(data_path + file_name))
51
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_51.txt"
  return(np.loadtxt(data_path + file_name))
52
53
54
55
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_55.txt"
  return(np.loadtxt(data_path + file_name))
56
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_56.txt"
  return(np.loadtxt(data_path + file_name))
57
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_57.txt"
  return(np.loadtxt(data_path + file_name))
58
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_58.txt"
  return(np.loadtxt(data_path + file_name))
59
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_59.txt"
  return(np.loadtxt(data_path + file_name))
60
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_60.txt"
  return(np.loadtxt(data_path + file_name))
61
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_61.txt"
  return(np.loadtxt(data_path + file_name))
62
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_62.txt"
  return(np.loadtxt(data_path + file_name))
63
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_63.txt"
  return(np.loadtxt(data_path + file_name))
64
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_64.txt"
  return(np.loadtxt(data_path + file_name))
65
66
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_66.txt"
  return(np.loadtxt(data_path + file_name))
67
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_67.txt"
  return(np.loadtxt(data_path + file_name))
68
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_68.txt"
  return(np.loadtxt(data_path + file_name))
69
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_69.txt"
  return(np.loadtxt(data_path + file_name))
70
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_70.txt"
  return(np.loadtxt(data_path + file_name))
71
72
73
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_73.txt"
  return(np.loadtxt(data_path + file_name))
74
75
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_75.txt"
  return(np.loadtxt(data_path + file_name))
76
77
78
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_78.txt"
  return(np.loadtxt(data_path + file_name))
79
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_79.txt"
  return(np.loadtxt(data_path + file_name))
80
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_80.txt"
  return(np.loadtxt(data_path + file_name))
81
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_81.txt"
  return(np.loadtxt(data_path + file_name))
82
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_82.txt"
  return(np.loadtxt(data_path + file_name))
83
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_83.txt"
  return(np.loadtxt(data_path + file_name))
84
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_84.txt"
  return(np.loadtxt(data_path + file_name))
85
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_85.txt"
  return(np.loadtxt(data_path + file_name))
86
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_86.txt"
  return(np.loadtxt(data_path + file_name))
87
88
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_88.txt"
  return(np.loadtxt(data_path + file_name))
89
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_89.txt"
  return(np.loadtxt(data_path + file_name))
90
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_90.txt"
  return(np.loadtxt(data_path + file_name))
91
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_91.txt"
  return(np.loadtxt(data_path + file_name))
92
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_92.txt"
  return(np.loadtxt(data_path + file_name))
93
94
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_94.txt"
  return(np.loadtxt(data_path + file_name))
95
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_95.txt"
  return(np.loadtxt(data_path + file_name))
96
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_96.txt"
  return(np.loadtxt(data_path + file_name))
97
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_97.txt"
  return(np.loadtxt(data_path + file_name))
98
99
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_99.txt"
  return(np.loadtxt(data_path + file_name))
100
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_100.txt"
  return(np.loadtxt(data_path + file_name))
101
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_101.txt"
  return(np.loadtxt(data_path + file_name))
102
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_102.txt"
  return(np.loadtxt(data_path + file_name))
103
104
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_104.txt"
  return(np.loadtxt(data_path + file_name))
105
106
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_106.txt"
  return(np.loadtxt(data_path + file_name))
107
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_107.txt"
  return(np.loadtxt(data_path + file_name))
108
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_108.txt"
  return(np.loadtxt(data_path + file_name))
109
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_109.txt"
  return(np.loadtxt(data_path + file_name))
110
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_110.txt"
  return(np.loadtxt(data_path + file_name))
111
112
113
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_113.txt"
  return(np.loadtxt(data_path + file_name))
114
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_114.txt"
  return(np.loadtxt(data_path + file_name))
115
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_115.txt"
  return(np.loadtxt(data_path + file_name))
116
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_116.txt"
  return(np.loadtxt(data_path + file_name))
117
118
119
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_119.txt"
  return(np.loadtxt(data_path + file_name))
120
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_120.txt"
  return(np.loadtxt(data_path + file_name))
121
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_121.txt"
  return(np.loadtxt(data_path + file_name))
122
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_122.txt"
  return(np.loadtxt(data_path + file_name))
123
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_123.txt"
  return(np.loadtxt(data_path + file_name))
124
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_124.txt"
  return(np.loadtxt(data_path + file_name))
125
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_125.txt"
  return(np.loadtxt(data_path + file_name))
126
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_126.txt"
  return(np.loadtxt(data_path + file_name))
127
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_127.txt"
  return(np.loadtxt(data_path + file_name))
128
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_128.txt"
  return(np.loadtxt(data_path + file_name))
129
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_129.txt"
  return(np.loadtxt(data_path + file_name))
130
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_130.txt"
  return(np.loadtxt(data_path + file_name))
131
132
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_132.txt"
  return(np.loadtxt(data_path + file_name))
133
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_133.txt"
  return(np.loadtxt(data_path + file_name))
134
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_134.txt"
  return(np.loadtxt(data_path + file_name))
135
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_135.txt"
  return(np.loadtxt(data_path + file_name))
136
137
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_137.txt"
  return(np.loadtxt(data_path + file_name))
138
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_138.txt"
  return(np.loadtxt(data_path + file_name))
139
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_139.txt"
  return(np.loadtxt(data_path + file_name))
140
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_140.txt"
  return(np.loadtxt(data_path + file_name))
141
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_141.txt"
  return(np.loadtxt(data_path + file_name))
142
143
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_143.txt"
  return(np.loadtxt(data_path + file_name))
144
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_144.txt"
  return(np.loadtxt(data_path + file_name))
145
146
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_146.txt"
  return(np.loadtxt(data_path + file_name))
147
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_147.txt"
  return(np.loadtxt(data_path + file_name))
148
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_148.txt"
  return(np.loadtxt(data_path + file_name))
149
150
151
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_151.txt"
  return(np.loadtxt(data_path + file_name))
152
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_152.txt"
  return(np.loadtxt(data_path + file_name))
153
154
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_154.txt"
  return(np.loadtxt(data_path + file_name))
155
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_155.txt"
  return(np.loadtxt(data_path + file_name))
156
157
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_157.txt"
  return(np.loadtxt(data_path + file_name))
158
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_158.txt"
  return(np.loadtxt(data_path + file_name))
159
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_159.txt"
  return(np.loadtxt(data_path + file_name))
160
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_160.txt"
  return(np.loadtxt(data_path + file_name))
161
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_161.txt"
  return(np.loadtxt(data_path + file_name))
162
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_162.txt"
  return(np.loadtxt(data_path + file_name))
163
164
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_164.txt"
  return(np.loadtxt(data_path + file_name))
165
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_165.txt"
  return(np.loadtxt(data_path + file_name))
166
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_166.txt"
  return(np.loadtxt(data_path + file_name))
167
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_167.txt"
  return(np.loadtxt(data_path + file_name))
168
169
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_169.txt"
  return(np.loadtxt(data_path + file_name))
170
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_170.txt"
  return(np.loadtxt(data_path + file_name))
171
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_171.txt"
  return(np.loadtxt(data_path + file_name))
172
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_172.txt"
  return(np.loadtxt(data_path + file_name))
173
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_173.txt"
  return(np.loadtxt(data_path + file_name))
174
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_174.txt"
  return(np.loadtxt(data_path + file_name))
175
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_175.txt"
  return(np.loadtxt(data_path + file_name))
176
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_176.txt"
  return(np.loadtxt(data_path + file_name))
177
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_177.txt"
  return(np.loadtxt(data_path + file_name))
178
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_178.txt"
  return(np.loadtxt(data_path + file_name))
179
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_179.txt"
  return(np.loadtxt(data_path + file_name))
180
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_180.txt"
  return(np.loadtxt(data_path + file_name))
181
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_181.txt"
  return(np.loadtxt(data_path + file_name))
182
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_182.txt"
  return(np.loadtxt(data_path + file_name))
183
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_183.txt"
  return(np.loadtxt(data_path + file_name))
184
185
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_185.txt"
  return(np.loadtxt(data_path + file_name))
186
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_186.txt"
  return(np.loadtxt(data_path + file_name))
187
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_187.txt"
  return(np.loadtxt(data_path + file_name))
188
189
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_189.txt"
  return(np.loadtxt(data_path + file_name))
190
191
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_191.txt"
  return(np.loadtxt(data_path + file_name))
192
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_192.txt"
  return(np.loadtxt(data_path + file_name))
193
194
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_194.txt"
  return(np.loadtxt(data_path + file_name))
195
196
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_196.txt"
  return(np.loadtxt(data_path + file_name))
197
198
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_198.txt"
  return(np.loadtxt(data_path + file_name))
199
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_199.txt"
  return(np.loadtxt(data_path + file_name))
>>> retrieved_saved = file_handling.load_retrieved(simulation_key)
0
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_0.txt"
  return(np.loadtxt(data_path + file_name))
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_2.txt"
  return(np.loadtxt(data_path + file_name))
3
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_3.txt"
  return(np.loadtxt(data_path + file_name))
4
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_4.txt"
  return(np.loadtxt(data_path + file_name))
5
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_5.txt"
  return(np.loadtxt(data_path + file_name))
6
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_6.txt"
  return(np.loadtxt(data_path + file_name))
7
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_7.txt"
  return(np.loadtxt(data_path + file_name))
8
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_8.txt"
  return(np.loadtxt(data_path + file_name))
9
10
11
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_11.txt"
  return(np.loadtxt(data_path + file_name))
12
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_12.txt"
  return(np.loadtxt(data_path + file_name))
13
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_13.txt"
  return(np.loadtxt(data_path + file_name))
14
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_14.txt"
  return(np.loadtxt(data_path + file_name))
15
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_15.txt"
  return(np.loadtxt(data_path + file_name))
16
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_16.txt"
  return(np.loadtxt(data_path + file_name))
17
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_17.txt"
  return(np.loadtxt(data_path + file_name))
18
19
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_19.txt"
  return(np.loadtxt(data_path + file_name))
20
21
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_21.txt"
  return(np.loadtxt(data_path + file_name))
22
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_22.txt"
  return(np.loadtxt(data_path + file_name))
23
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_23.txt"
  return(np.loadtxt(data_path + file_name))
24
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_24.txt"
  return(np.loadtxt(data_path + file_name))
25
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_25.txt"
  return(np.loadtxt(data_path + file_name))
26
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_26.txt"
  return(np.loadtxt(data_path + file_name))
27
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_27.txt"
  return(np.loadtxt(data_path + file_name))
28
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_28.txt"
  return(np.loadtxt(data_path + file_name))
29
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_29.txt"
  return(np.loadtxt(data_path + file_name))
30
31
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_31.txt"
  return(np.loadtxt(data_path + file_name))
32
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_32.txt"
  return(np.loadtxt(data_path + file_name))
33
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_33.txt"
  return(np.loadtxt(data_path + file_name))
34
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_34.txt"
  return(np.loadtxt(data_path + file_name))
35
36
37
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_37.txt"
  return(np.loadtxt(data_path + file_name))
38
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_38.txt"
  return(np.loadtxt(data_path + file_name))
39
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_39.txt"
  return(np.loadtxt(data_path + file_name))
40
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_40.txt"
  return(np.loadtxt(data_path + file_name))
41
42
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_42.txt"
  return(np.loadtxt(data_path + file_name))
43
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_43.txt"
  return(np.loadtxt(data_path + file_name))
44
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_44.txt"
  return(np.loadtxt(data_path + file_name))
45
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_45.txt"
  return(np.loadtxt(data_path + file_name))
46
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_46.txt"
  return(np.loadtxt(data_path + file_name))
47
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_47.txt"
  return(np.loadtxt(data_path + file_name))
48
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_48.txt"
  return(np.loadtxt(data_path + file_name))
49
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_49.txt"
  return(np.loadtxt(data_path + file_name))
50
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_50.txt"
  return(np.loadtxt(data_path + file_name))
51
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_51.txt"
  return(np.loadtxt(data_path + file_name))
52
53
54
55
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_55.txt"
  return(np.loadtxt(data_path + file_name))
56
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_56.txt"
  return(np.loadtxt(data_path + file_name))
57
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_57.txt"
  return(np.loadtxt(data_path + file_name))
58
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_58.txt"
  return(np.loadtxt(data_path + file_name))
59
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_59.txt"
  return(np.loadtxt(data_path + file_name))
60
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_60.txt"
  return(np.loadtxt(data_path + file_name))
61
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_61.txt"
  return(np.loadtxt(data_path + file_name))
62
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_62.txt"
  return(np.loadtxt(data_path + file_name))
63
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_63.txt"
  return(np.loadtxt(data_path + file_name))
64
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_64.txt"
  return(np.loadtxt(data_path + file_name))
65
66
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_66.txt"
  return(np.loadtxt(data_path + file_name))
67
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_67.txt"
  return(np.loadtxt(data_path + file_name))
68
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_68.txt"
  return(np.loadtxt(data_path + file_name))
69
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_69.txt"
  return(np.loadtxt(data_path + file_name))
70
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_70.txt"
  return(np.loadtxt(data_path + file_name))
71
72
73
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_73.txt"
  return(np.loadtxt(data_path + file_name))
74
75
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_75.txt"
  return(np.loadtxt(data_path + file_name))
76
77
78
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_78.txt"
  return(np.loadtxt(data_path + file_name))
79
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_79.txt"
  return(np.loadtxt(data_path + file_name))
80
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_80.txt"
  return(np.loadtxt(data_path + file_name))
81
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_81.txt"
  return(np.loadtxt(data_path + file_name))
82
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_82.txt"
  return(np.loadtxt(data_path + file_name))
83
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_83.txt"
  return(np.loadtxt(data_path + file_name))
84
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_84.txt"
  return(np.loadtxt(data_path + file_name))
85
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_85.txt"
  return(np.loadtxt(data_path + file_name))
86
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_86.txt"
  return(np.loadtxt(data_path + file_name))
87
88
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_88.txt"
  return(np.loadtxt(data_path + file_name))
89
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_89.txt"
  return(np.loadtxt(data_path + file_name))
90
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_90.txt"
  return(np.loadtxt(data_path + file_name))
91
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_91.txt"
  return(np.loadtxt(data_path + file_name))
92
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_92.txt"
  return(np.loadtxt(data_path + file_name))
93
94
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_94.txt"
  return(np.loadtxt(data_path + file_name))
95
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_95.txt"
  return(np.loadtxt(data_path + file_name))
96
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_96.txt"
  return(np.loadtxt(data_path + file_name))
97
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_97.txt"
  return(np.loadtxt(data_path + file_name))
98
99
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_99.txt"
  return(np.loadtxt(data_path + file_name))
100
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_100.txt"
  return(np.loadtxt(data_path + file_name))
101
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_101.txt"
  return(np.loadtxt(data_path + file_name))
102
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_102.txt"
  return(np.loadtxt(data_path + file_name))
103
104
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_104.txt"
  return(np.loadtxt(data_path + file_name))
105
106
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_106.txt"
  return(np.loadtxt(data_path + file_name))
107
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_107.txt"
  return(np.loadtxt(data_path + file_name))
108
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_108.txt"
  return(np.loadtxt(data_path + file_name))
109
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_109.txt"
  return(np.loadtxt(data_path + file_name))
110
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_110.txt"
  return(np.loadtxt(data_path + file_name))
111
112
113
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_113.txt"
  return(np.loadtxt(data_path + file_name))
114
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_114.txt"
  return(np.loadtxt(data_path + file_name))
115
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_115.txt"
  return(np.loadtxt(data_path + file_name))
116
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_116.txt"
  return(np.loadtxt(data_path + file_name))
117
118
119
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_119.txt"
  return(np.loadtxt(data_path + file_name))
120
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_120.txt"
  return(np.loadtxt(data_path + file_name))
121
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_121.txt"
  return(np.loadtxt(data_path + file_name))
122
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_122.txt"
  return(np.loadtxt(data_path + file_name))
123
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_123.txt"
  return(np.loadtxt(data_path + file_name))
124
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_124.txt"
  return(np.loadtxt(data_path + file_name))
125
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_125.txt"
  return(np.loadtxt(data_path + file_name))
126
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_126.txt"
  return(np.loadtxt(data_path + file_name))
127
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_127.txt"
  return(np.loadtxt(data_path + file_name))
128
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_128.txt"
  return(np.loadtxt(data_path + file_name))
129
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_129.txt"
  return(np.loadtxt(data_path + file_name))
130
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_130.txt"
  return(np.loadtxt(data_path + file_name))
131
132
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_132.txt"
  return(np.loadtxt(data_path + file_name))
133
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_133.txt"
  return(np.loadtxt(data_path + file_name))
134
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_134.txt"
  return(np.loadtxt(data_path + file_name))
135
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_135.txt"
  return(np.loadtxt(data_path + file_name))
136
137
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_137.txt"
  return(np.loadtxt(data_path + file_name))
138
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_138.txt"
  return(np.loadtxt(data_path + file_name))
139
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_139.txt"
  return(np.loadtxt(data_path + file_name))
140
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_140.txt"
  return(np.loadtxt(data_path + file_name))
141
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_141.txt"
  return(np.loadtxt(data_path + file_name))
142
143
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_143.txt"
  return(np.loadtxt(data_path + file_name))
144
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_144.txt"
  return(np.loadtxt(data_path + file_name))
145
146
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_146.txt"
  return(np.loadtxt(data_path + file_name))
147
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_147.txt"
  return(np.loadtxt(data_path + file_name))
148
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_148.txt"
  return(np.loadtxt(data_path + file_name))
149
150
151
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_151.txt"
  return(np.loadtxt(data_path + file_name))
152
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_152.txt"
  return(np.loadtxt(data_path + file_name))
153
154
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_154.txt"
  return(np.loadtxt(data_path + file_name))
155
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_155.txt"
  return(np.loadtxt(data_path + file_name))
156
157
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_157.txt"
  return(np.loadtxt(data_path + file_name))
158
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_158.txt"
  return(np.loadtxt(data_path + file_name))
159
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_159.txt"
  return(np.loadtxt(data_path + file_name))
160
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_160.txt"
  return(np.loadtxt(data_path + file_name))
161
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_161.txt"
  return(np.loadtxt(data_path + file_name))
162
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_162.txt"
  return(np.loadtxt(data_path + file_name))
163
164
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_164.txt"
  return(np.loadtxt(data_path + file_name))
165
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_165.txt"
  return(np.loadtxt(data_path + file_name))
166
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_166.txt"
  return(np.loadtxt(data_path + file_name))
167
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_167.txt"
  return(np.loadtxt(data_path + file_name))
168
169
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_169.txt"
  return(np.loadtxt(data_path + file_name))
170
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_170.txt"
  return(np.loadtxt(data_path + file_name))
171
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_171.txt"
  return(np.loadtxt(data_path + file_name))
172
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_172.txt"
  return(np.loadtxt(data_path + file_name))
173
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_173.txt"
  return(np.loadtxt(data_path + file_name))
174
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_174.txt"
  return(np.loadtxt(data_path + file_name))
175
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_175.txt"
  return(np.loadtxt(data_path + file_name))
176
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_176.txt"
  return(np.loadtxt(data_path + file_name))
177
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_177.txt"
  return(np.loadtxt(data_path + file_name))
178
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_178.txt"
  return(np.loadtxt(data_path + file_name))
179
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_179.txt"
  return(np.loadtxt(data_path + file_name))
180
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_180.txt"
  return(np.loadtxt(data_path + file_name))
181
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_181.txt"
  return(np.loadtxt(data_path + file_name))
182
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_182.txt"
  return(np.loadtxt(data_path + file_name))
183
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_183.txt"
  return(np.loadtxt(data_path + file_name))
184
185
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_185.txt"
  return(np.loadtxt(data_path + file_name))
186
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_186.txt"
  return(np.loadtxt(data_path + file_name))
187
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_187.txt"
  return(np.loadtxt(data_path + file_name))
188
189
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_189.txt"
  return(np.loadtxt(data_path + file_name))
190
191
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_191.txt"
  return(np.loadtxt(data_path + file_name))
192
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_192.txt"
  return(np.loadtxt(data_path + file_name))
193
194
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_194.txt"
  return(np.loadtxt(data_path + file_name))
195
196
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_196.txt"
  return(np.loadtxt(data_path + file_name))
197
198
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_198.txt"
  return(np.loadtxt(data_path + file_name))
199
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_199.txt"
  return(np.loadtxt(data_path + file_name))
>>> retrieved_saved = file_handling.load_retrieved(simulation_key)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> retrieved_saved = file_handling.load_retrieved(simulation_key)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> simulation_key
'ff7857f17a0abd6792f5795bb97de966'
>>> retrieved_saved[ii for ii in range(p)]
  File "<stdin>", line 1
    retrieved_saved[ii for ii in range(p)]
                         ^
SyntaxError: invalid syntax
>>> [retrieved_saved[ii] for ii in range(p)]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'p' is not defined
>>> p = 200
>>> [retrieved_saved[ii] for ii in range(p)]
[[], [], [], [], [], [], [], [], [], [127, 165], [84, 120], [], [], [], [], [], [], [], [108], [], [143], [], [], [], [], [], [], [], [], [], [69], [], [], [], [], [69], [48, 184, 175], [], [], [], [], [52], [], [], [], [], [], [], [], [], [], [], [175, 57], [183, 95], [156, 188], [], [], [], [], [], [], [], [], [], [], [196], [], [], [], [], [], [153, 79], [138], [], [33], [], [95], [75], [], [], [], [], [], [], [], [], [], [51, 67], [], [], [], [], [], [56, 44], [], [], [], [], [25], [], [], [], [], [153], [], [164, 48], [], [], [], [], [], [69], [13, 40], [], [], [], [], [33], [116, 4], [], [], [], [], [], [], [], [], [], [], [], [], [103], [], [], [], [], [196], [], [], [], [], [], [1], [], [], [87, 51, 67], [], [], [], [128], [10, 84, 120, 33], [], [], [103], [], [], [188], [], [], [], [], [], [], [76, 95], [], [], [], [], [21], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [175], [], [], [], [156, 54], [], [183], [], [], [49], [], [56], [], [152], [], []]
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/crossover_histogram.py", line 56, in <module>
    lamb_hist_gsln(simulations_below, title_str_below)
NameError: name 'lamb_hist_gsln' is not defined
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import matplotlib.pyplot as plt
... import seaborn as sns
... 
... # Standard libraries
... import numpy as np
... 
... ...
...             for ind_trans in range(len(lamb[ind_cue])):
...                 lamb_1D[cpt] = lamb[ind_cue][ind_trans]
...                 cpt += 1
...         sns.distplot(lamb_1D)
...         plt.xlabel(r'$\lambda$')
...         plt.ylabel('Density')
...         plt.title(r'w=' +str(w) + ', Gsln')
...         plt.legend(labels)
... 
... plt.show()
ind_key = 0
0
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_0.txt"
  return(np.loadtxt(data_path + file_name))
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_2.txt"
  return(np.loadtxt(data_path + file_name))
3
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_3.txt"
  return(np.loadtxt(data_path + file_name))
4
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_4.txt"
  return(np.loadtxt(data_path + file_name))
5
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_5.txt"
  return(np.loadtxt(data_path + file_name))
6
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_6.txt"
  return(np.loadtxt(data_path + file_name))
7
8
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_8.txt"
  return(np.loadtxt(data_path + file_name))
9
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_9.txt"
  return(np.loadtxt(data_path + file_name))
10
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_10.txt"
  return(np.loadtxt(data_path + file_name))
11
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_11.txt"
  return(np.loadtxt(data_path + file_name))
12
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_12.txt"
  return(np.loadtxt(data_path + file_name))
13
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_13.txt"
  return(np.loadtxt(data_path + file_name))
14
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_14.txt"
  return(np.loadtxt(data_path + file_name))
15
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_15.txt"
  return(np.loadtxt(data_path + file_name))
16
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_16.txt"
  return(np.loadtxt(data_path + file_name))
17
18
19
20
21
22
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_22.txt"
  return(np.loadtxt(data_path + file_name))
23
24
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_24.txt"
  return(np.loadtxt(data_path + file_name))
25
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_25.txt"
  return(np.loadtxt(data_path + file_name))
26
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_26.txt"
  return(np.loadtxt(data_path + file_name))
27
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_27.txt"
  return(np.loadtxt(data_path + file_name))
28
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_28.txt"
  return(np.loadtxt(data_path + file_name))
29
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_29.txt"
  return(np.loadtxt(data_path + file_name))
30
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_30.txt"
  return(np.loadtxt(data_path + file_name))
31
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_31.txt"
  return(np.loadtxt(data_path + file_name))
32
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_32.txt"
  return(np.loadtxt(data_path + file_name))
33
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_33.txt"
  return(np.loadtxt(data_path + file_name))
34
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_34.txt"
  return(np.loadtxt(data_path + file_name))
35
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_35.txt"
  return(np.loadtxt(data_path + file_name))
36
37
38
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_38.txt"
  return(np.loadtxt(data_path + file_name))
39
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_39.txt"
  return(np.loadtxt(data_path + file_name))
40
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_40.txt"
  return(np.loadtxt(data_path + file_name))
41
42
43
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_43.txt"
  return(np.loadtxt(data_path + file_name))
44
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_44.txt"
  return(np.loadtxt(data_path + file_name))
45
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_45.txt"
  return(np.loadtxt(data_path + file_name))
46
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_46.txt"
  return(np.loadtxt(data_path + file_name))
47
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_47.txt"
  return(np.loadtxt(data_path + file_name))
48
49
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_49.txt"
  return(np.loadtxt(data_path + file_name))
50
51
52
53
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_53.txt"
  return(np.loadtxt(data_path + file_name))
54
55
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_55.txt"
  return(np.loadtxt(data_path + file_name))
56
57
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_57.txt"
  return(np.loadtxt(data_path + file_name))
58
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_58.txt"
  return(np.loadtxt(data_path + file_name))
59
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_59.txt"
  return(np.loadtxt(data_path + file_name))
60
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_60.txt"
  return(np.loadtxt(data_path + file_name))
61
62
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_62.txt"
  return(np.loadtxt(data_path + file_name))
63
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_63.txt"
  return(np.loadtxt(data_path + file_name))
64
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_64.txt"
  return(np.loadtxt(data_path + file_name))
65
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_65.txt"
  return(np.loadtxt(data_path + file_name))
66
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_66.txt"
  return(np.loadtxt(data_path + file_name))
67
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_67.txt"
  return(np.loadtxt(data_path + file_name))
68
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_68.txt"
  return(np.loadtxt(data_path + file_name))
69
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_69.txt"
  return(np.loadtxt(data_path + file_name))
70
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_70.txt"
  return(np.loadtxt(data_path + file_name))
71
72
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_72.txt"
  return(np.loadtxt(data_path + file_name))
73
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_73.txt"
  return(np.loadtxt(data_path + file_name))
74
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_74.txt"
  return(np.loadtxt(data_path + file_name))
75
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_75.txt"
  return(np.loadtxt(data_path + file_name))
76
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_76.txt"
  return(np.loadtxt(data_path + file_name))
77
78
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_78.txt"
  return(np.loadtxt(data_path + file_name))
79
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_79.txt"
  return(np.loadtxt(data_path + file_name))
80
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_80.txt"
  return(np.loadtxt(data_path + file_name))
81
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_81.txt"
  return(np.loadtxt(data_path + file_name))
82
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_82.txt"
  return(np.loadtxt(data_path + file_name))
83
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_83.txt"
  return(np.loadtxt(data_path + file_name))
84
85
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_85.txt"
  return(np.loadtxt(data_path + file_name))
86
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_86.txt"
  return(np.loadtxt(data_path + file_name))
87
88
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_88.txt"
  return(np.loadtxt(data_path + file_name))
89
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_89.txt"
  return(np.loadtxt(data_path + file_name))
90
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_90.txt"
  return(np.loadtxt(data_path + file_name))
91
92
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_92.txt"
  return(np.loadtxt(data_path + file_name))
93
94
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_94.txt"
  return(np.loadtxt(data_path + file_name))
95
96
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_96.txt"
  return(np.loadtxt(data_path + file_name))
97
98
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_98.txt"
  return(np.loadtxt(data_path + file_name))
99
100
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_100.txt"
  return(np.loadtxt(data_path + file_name))
101
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_101.txt"
  return(np.loadtxt(data_path + file_name))
102
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_102.txt"
  return(np.loadtxt(data_path + file_name))
103
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_103.txt"
  return(np.loadtxt(data_path + file_name))
104
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_104.txt"
  return(np.loadtxt(data_path + file_name))
105
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_105.txt"
  return(np.loadtxt(data_path + file_name))
106
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_106.txt"
  return(np.loadtxt(data_path + file_name))
107
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_107.txt"
  return(np.loadtxt(data_path + file_name))
108
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_108.txt"
  return(np.loadtxt(data_path + file_name))
109
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_109.txt"
  return(np.loadtxt(data_path + file_name))
110
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_110.txt"
  return(np.loadtxt(data_path + file_name))
111
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_111.txt"
  return(np.loadtxt(data_path + file_name))
112
113
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_113.txt"
  return(np.loadtxt(data_path + file_name))
114
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_114.txt"
  return(np.loadtxt(data_path + file_name))
115
116
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_116.txt"
  return(np.loadtxt(data_path + file_name))
117
118
119
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_119.txt"
  return(np.loadtxt(data_path + file_name))
120
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_120.txt"
  return(np.loadtxt(data_path + file_name))
121
122
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_122.txt"
  return(np.loadtxt(data_path + file_name))
123
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_123.txt"
  return(np.loadtxt(data_path + file_name))
124
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_124.txt"
  return(np.loadtxt(data_path + file_name))
125
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_125.txt"
  return(np.loadtxt(data_path + file_name))
126
127
128
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_128.txt"
  return(np.loadtxt(data_path + file_name))
129
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_129.txt"
  return(np.loadtxt(data_path + file_name))
130
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_130.txt"
  return(np.loadtxt(data_path + file_name))
131
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_131.txt"
  return(np.loadtxt(data_path + file_name))
132
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_132.txt"
  return(np.loadtxt(data_path + file_name))
133
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_133.txt"
  return(np.loadtxt(data_path + file_name))
134
135
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_135.txt"
  return(np.loadtxt(data_path + file_name))
136
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_136.txt"
  return(np.loadtxt(data_path + file_name))
137
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_137.txt"
  return(np.loadtxt(data_path + file_name))
138
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_138.txt"
  return(np.loadtxt(data_path + file_name))
139
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_139.txt"
  return(np.loadtxt(data_path + file_name))
140
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_140.txt"
  return(np.loadtxt(data_path + file_name))
141
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_141.txt"
  return(np.loadtxt(data_path + file_name))
142
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_142.txt"
  return(np.loadtxt(data_path + file_name))
143
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_143.txt"
  return(np.loadtxt(data_path + file_name))
144
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_144.txt"
  return(np.loadtxt(data_path + file_name))
145
146
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_146.txt"
  return(np.loadtxt(data_path + file_name))
147
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_147.txt"
  return(np.loadtxt(data_path + file_name))
148
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_148.txt"
  return(np.loadtxt(data_path + file_name))
149
150
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_150.txt"
  return(np.loadtxt(data_path + file_name))
151
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_151.txt"
  return(np.loadtxt(data_path + file_name))
152
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_152.txt"
  return(np.loadtxt(data_path + file_name))
153
154
155
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_155.txt"
  return(np.loadtxt(data_path + file_name))
156
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_156.txt"
  return(np.loadtxt(data_path + file_name))
157
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_157.txt"
  return(np.loadtxt(data_path + file_name))
158
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_158.txt"
  return(np.loadtxt(data_path + file_name))
159
160
161
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_161.txt"
  return(np.loadtxt(data_path + file_name))
162
163
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_163.txt"
  return(np.loadtxt(data_path + file_name))
164
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_164.txt"
  return(np.loadtxt(data_path + file_name))
165
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_165.txt"
  return(np.loadtxt(data_path + file_name))
166
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_166.txt"
  return(np.loadtxt(data_path + file_name))
167
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_167.txt"
  return(np.loadtxt(data_path + file_name))
168
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_168.txt"
  return(np.loadtxt(data_path + file_name))
169
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_169.txt"
  return(np.loadtxt(data_path + file_name))
170
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_170.txt"
  return(np.loadtxt(data_path + file_name))
171
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_171.txt"
  return(np.loadtxt(data_path + file_name))
172
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_172.txt"
  return(np.loadtxt(data_path + file_name))
173
174
175
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_175.txt"
  return(np.loadtxt(data_path + file_name))
176
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_176.txt"
  return(np.loadtxt(data_path + file_name))
177
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_177.txt"
  return(np.loadtxt(data_path + file_name))
178
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_178.txt"
  return(np.loadtxt(data_path + file_name))
179
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_179.txt"
  return(np.loadtxt(data_path + file_name))
180
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_180.txt"
  return(np.loadtxt(data_path + file_name))
181
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_181.txt"
  return(np.loadtxt(data_path + file_name))
182
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_182.txt"
  return(np.loadtxt(data_path + file_name))
183
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_183.txt"
  return(np.loadtxt(data_path + file_name))
184
185
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_185.txt"
  return(np.loadtxt(data_path + file_name))
186
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_186.txt"
  return(np.loadtxt(data_path + file_name))
187
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_187.txt"
  return(np.loadtxt(data_path + file_name))
188
189
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_189.txt"
  return(np.loadtxt(data_path + file_name))
190
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_190.txt"
  return(np.loadtxt(data_path + file_name))
191
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_191.txt"
  return(np.loadtxt(data_path + file_name))
192
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_192.txt"
  return(np.loadtxt(data_path + file_name))
193
194
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_194.txt"
  return(np.loadtxt(data_path + file_name))
195
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_195.txt"
  return(np.loadtxt(data_path + file_name))
196
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_196.txt"
  return(np.loadtxt(data_path + file_name))
197
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_197.txt"
  return(np.loadtxt(data_path + file_name))
198
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_198.txt"
  return(np.loadtxt(data_path + file_name))
199
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/644eba9257be9f7f7fef6c9a4b872b1e/dynamics_cue_199.txt"
  return(np.loadtxt(data_path + file_name))
ind_key = 1
0
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_0.txt"
  return(np.loadtxt(data_path + file_name))
1
2
3
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_3.txt"
  return(np.loadtxt(data_path + file_name))
4
5
6
7
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_7.txt"
  return(np.loadtxt(data_path + file_name))
8
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_8.txt"
  return(np.loadtxt(data_path + file_name))
9
10
11
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_11.txt"
  return(np.loadtxt(data_path + file_name))
12
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_12.txt"
  return(np.loadtxt(data_path + file_name))
13
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_13.txt"
  return(np.loadtxt(data_path + file_name))
14
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_14.txt"
  return(np.loadtxt(data_path + file_name))
15
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_15.txt"
  return(np.loadtxt(data_path + file_name))
16
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_16.txt"
  return(np.loadtxt(data_path + file_name))
17
18
19
20
21
22
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_22.txt"
  return(np.loadtxt(data_path + file_name))
23
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_23.txt"
  return(np.loadtxt(data_path + file_name))
24
25
26
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_26.txt"
  return(np.loadtxt(data_path + file_name))
27
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_27.txt"
  return(np.loadtxt(data_path + file_name))
28
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_28.txt"
  return(np.loadtxt(data_path + file_name))
29
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_29.txt"
  return(np.loadtxt(data_path + file_name))
30
31
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_31.txt"
  return(np.loadtxt(data_path + file_name))
32
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_32.txt"
  return(np.loadtxt(data_path + file_name))
33
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_33.txt"
  return(np.loadtxt(data_path + file_name))
34
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_34.txt"
  return(np.loadtxt(data_path + file_name))
35
36
37
38
39
40
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_40.txt"
  return(np.loadtxt(data_path + file_name))
41
42
43
44
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_44.txt"
  return(np.loadtxt(data_path + file_name))
45
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_45.txt"
  return(np.loadtxt(data_path + file_name))
46
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_46.txt"
  return(np.loadtxt(data_path + file_name))
47
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_47.txt"
  return(np.loadtxt(data_path + file_name))
48
49
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_49.txt"
  return(np.loadtxt(data_path + file_name))
50
51
52
53
54
55
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_55.txt"
  return(np.loadtxt(data_path + file_name))
56
57
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_57.txt"
  return(np.loadtxt(data_path + file_name))
58
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_58.txt"
  return(np.loadtxt(data_path + file_name))
59
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_59.txt"
  return(np.loadtxt(data_path + file_name))
60
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_60.txt"
  return(np.loadtxt(data_path + file_name))
61
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_61.txt"
  return(np.loadtxt(data_path + file_name))
62
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_62.txt"
  return(np.loadtxt(data_path + file_name))
63
64
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_64.txt"
  return(np.loadtxt(data_path + file_name))
65
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_65.txt"
  return(np.loadtxt(data_path + file_name))
66
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_66.txt"
  return(np.loadtxt(data_path + file_name))
67
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_67.txt"
  return(np.loadtxt(data_path + file_name))
68
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_68.txt"
  return(np.loadtxt(data_path + file_name))
69
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_69.txt"
  return(np.loadtxt(data_path + file_name))
70
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_70.txt"
  return(np.loadtxt(data_path + file_name))
71
72
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_72.txt"
  return(np.loadtxt(data_path + file_name))
73
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_73.txt"
  return(np.loadtxt(data_path + file_name))
74
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_74.txt"
  return(np.loadtxt(data_path + file_name))
75
76
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_76.txt"
  return(np.loadtxt(data_path + file_name))
77
78
79
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_79.txt"
  return(np.loadtxt(data_path + file_name))
80
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_80.txt"
  return(np.loadtxt(data_path + file_name))
81
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_81.txt"
  return(np.loadtxt(data_path + file_name))
82
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_82.txt"
  return(np.loadtxt(data_path + file_name))
83
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_83.txt"
  return(np.loadtxt(data_path + file_name))
84
85
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_85.txt"
  return(np.loadtxt(data_path + file_name))
86
87
88
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_88.txt"
  return(np.loadtxt(data_path + file_name))
89
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_89.txt"
  return(np.loadtxt(data_path + file_name))
90
91
92
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_92.txt"
  return(np.loadtxt(data_path + file_name))
93
94
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_94.txt"
  return(np.loadtxt(data_path + file_name))
95
96
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_96.txt"
  return(np.loadtxt(data_path + file_name))
97
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_97.txt"
  return(np.loadtxt(data_path + file_name))
98
99
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_99.txt"
  return(np.loadtxt(data_path + file_name))
100
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_100.txt"
  return(np.loadtxt(data_path + file_name))
101
102
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_102.txt"
  return(np.loadtxt(data_path + file_name))
103
104
105
106
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_106.txt"
  return(np.loadtxt(data_path + file_name))
107
108
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_108.txt"
  return(np.loadtxt(data_path + file_name))
109
110
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_110.txt"
  return(np.loadtxt(data_path + file_name))
111
112
113
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_113.txt"
  return(np.loadtxt(data_path + file_name))
114
115
116
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_116.txt"
  return(np.loadtxt(data_path + file_name))
117
118
119
120
121
122
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_122.txt"
  return(np.loadtxt(data_path + file_name))
123
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_123.txt"
  return(np.loadtxt(data_path + file_name))
124
125
126
127
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_127.txt"
  return(np.loadtxt(data_path + file_name))
128
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_128.txt"
  return(np.loadtxt(data_path + file_name))
129
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_129.txt"
  return(np.loadtxt(data_path + file_name))
130
131
132
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_132.txt"
  return(np.loadtxt(data_path + file_name))
133
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_133.txt"
  return(np.loadtxt(data_path + file_name))
134
135
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_135.txt"
  return(np.loadtxt(data_path + file_name))
136
137
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_137.txt"
  return(np.loadtxt(data_path + file_name))
138
139
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_139.txt"
  return(np.loadtxt(data_path + file_name))
140
141
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_141.txt"
  return(np.loadtxt(data_path + file_name))
142
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_142.txt"
  return(np.loadtxt(data_path + file_name))
143
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_143.txt"
  return(np.loadtxt(data_path + file_name))
144
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_144.txt"
  return(np.loadtxt(data_path + file_name))
145
146
147
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_147.txt"
  return(np.loadtxt(data_path + file_name))
148
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_148.txt"
  return(np.loadtxt(data_path + file_name))
149
150
151
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_151.txt"
  return(np.loadtxt(data_path + file_name))
152
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_152.txt"
  return(np.loadtxt(data_path + file_name))
153
154
155
156
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_156.txt"
  return(np.loadtxt(data_path + file_name))
157
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_157.txt"
  return(np.loadtxt(data_path + file_name))
158
159
160
161
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_161.txt"
  return(np.loadtxt(data_path + file_name))
162
163
164
165
166
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_166.txt"
  return(np.loadtxt(data_path + file_name))
167
168
169
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_169.txt"
  return(np.loadtxt(data_path + file_name))
170
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_170.txt"
  return(np.loadtxt(data_path + file_name))
171
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_171.txt"
  return(np.loadtxt(data_path + file_name))
172
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_172.txt"
  return(np.loadtxt(data_path + file_name))
173
174
175
176
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_176.txt"
  return(np.loadtxt(data_path + file_name))
177
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_177.txt"
  return(np.loadtxt(data_path + file_name))
178
179
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_179.txt"
  return(np.loadtxt(data_path + file_name))
180
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_180.txt"
  return(np.loadtxt(data_path + file_name))
181
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_181.txt"
  return(np.loadtxt(data_path + file_name))
182
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_182.txt"
  return(np.loadtxt(data_path + file_name))
183
184
185
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_185.txt"
  return(np.loadtxt(data_path + file_name))
186
187
188
189
190
191
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_191.txt"
  return(np.loadtxt(data_path + file_name))
192
193
194
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_194.txt"
  return(np.loadtxt(data_path + file_name))
195
196
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_196.txt"
  return(np.loadtxt(data_path + file_name))
197
198
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/b48aa9b95e3182d7c2e0e20522a28bd2/dynamics_cue_198.txt"
  return(np.loadtxt(data_path + file_name))
199
ind_key = 2
0
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_0.txt"
  return(np.loadtxt(data_path + file_name))
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_2.txt"
  return(np.loadtxt(data_path + file_name))
3
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_3.txt"
  return(np.loadtxt(data_path + file_name))
4
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_4.txt"
  return(np.loadtxt(data_path + file_name))
5
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_5.txt"
  return(np.loadtxt(data_path + file_name))
6
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_6.txt"
  return(np.loadtxt(data_path + file_name))
7
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_7.txt"
  return(np.loadtxt(data_path + file_name))
8
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_8.txt"
  return(np.loadtxt(data_path + file_name))
9
10
11
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_11.txt"
  return(np.loadtxt(data_path + file_name))
12
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_12.txt"
  return(np.loadtxt(data_path + file_name))
13
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_13.txt"
  return(np.loadtxt(data_path + file_name))
14
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_14.txt"
  return(np.loadtxt(data_path + file_name))
15
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_15.txt"
  return(np.loadtxt(data_path + file_name))
16
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_16.txt"
  return(np.loadtxt(data_path + file_name))
17
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_17.txt"
  return(np.loadtxt(data_path + file_name))
18
19
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_19.txt"
  return(np.loadtxt(data_path + file_name))
20
21
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_21.txt"
  return(np.loadtxt(data_path + file_name))
22
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_22.txt"
  return(np.loadtxt(data_path + file_name))
23
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_23.txt"
  return(np.loadtxt(data_path + file_name))
24
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_24.txt"
  return(np.loadtxt(data_path + file_name))
25
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_25.txt"
  return(np.loadtxt(data_path + file_name))
26
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_26.txt"
  return(np.loadtxt(data_path + file_name))
27
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_27.txt"
  return(np.loadtxt(data_path + file_name))
28
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_28.txt"
  return(np.loadtxt(data_path + file_name))
29
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_29.txt"
  return(np.loadtxt(data_path + file_name))
30
31
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_31.txt"
  return(np.loadtxt(data_path + file_name))
32
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_32.txt"
  return(np.loadtxt(data_path + file_name))
33
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_33.txt"
  return(np.loadtxt(data_path + file_name))
34
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_34.txt"
  return(np.loadtxt(data_path + file_name))
35
36
37
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_37.txt"
  return(np.loadtxt(data_path + file_name))
38
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_38.txt"
  return(np.loadtxt(data_path + file_name))
39
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_39.txt"
  return(np.loadtxt(data_path + file_name))
40
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_40.txt"
  return(np.loadtxt(data_path + file_name))
41
42
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_42.txt"
  return(np.loadtxt(data_path + file_name))
43
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_43.txt"
  return(np.loadtxt(data_path + file_name))
44
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_44.txt"
  return(np.loadtxt(data_path + file_name))
45
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_45.txt"
  return(np.loadtxt(data_path + file_name))
46
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_46.txt"
  return(np.loadtxt(data_path + file_name))
47
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_47.txt"
  return(np.loadtxt(data_path + file_name))
48
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_48.txt"
  return(np.loadtxt(data_path + file_name))
49
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_49.txt"
  return(np.loadtxt(data_path + file_name))
50
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_50.txt"
  return(np.loadtxt(data_path + file_name))
51
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_51.txt"
  return(np.loadtxt(data_path + file_name))
52
53
54
55
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_55.txt"
  return(np.loadtxt(data_path + file_name))
56
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_56.txt"
  return(np.loadtxt(data_path + file_name))
57
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_57.txt"
  return(np.loadtxt(data_path + file_name))
58
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_58.txt"
  return(np.loadtxt(data_path + file_name))
59
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_59.txt"
  return(np.loadtxt(data_path + file_name))
60
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_60.txt"
  return(np.loadtxt(data_path + file_name))
61
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_61.txt"
  return(np.loadtxt(data_path + file_name))
62
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_62.txt"
  return(np.loadtxt(data_path + file_name))
63
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_63.txt"
  return(np.loadtxt(data_path + file_name))
64
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_64.txt"
  return(np.loadtxt(data_path + file_name))
65
66
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_66.txt"
  return(np.loadtxt(data_path + file_name))
67
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_67.txt"
  return(np.loadtxt(data_path + file_name))
68
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_68.txt"
  return(np.loadtxt(data_path + file_name))
69
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_69.txt"
  return(np.loadtxt(data_path + file_name))
70
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_70.txt"
  return(np.loadtxt(data_path + file_name))
71
72
73
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_73.txt"
  return(np.loadtxt(data_path + file_name))
74
75
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_75.txt"
  return(np.loadtxt(data_path + file_name))
76
77
78
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_78.txt"
  return(np.loadtxt(data_path + file_name))
79
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_79.txt"
  return(np.loadtxt(data_path + file_name))
80
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_80.txt"
  return(np.loadtxt(data_path + file_name))
81
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_81.txt"
  return(np.loadtxt(data_path + file_name))
82
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_82.txt"
  return(np.loadtxt(data_path + file_name))
83
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_83.txt"
  return(np.loadtxt(data_path + file_name))
84
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_84.txt"
  return(np.loadtxt(data_path + file_name))
85
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_85.txt"
  return(np.loadtxt(data_path + file_name))
86
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_86.txt"
  return(np.loadtxt(data_path + file_name))
87
88
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_88.txt"
  return(np.loadtxt(data_path + file_name))
89
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_89.txt"
  return(np.loadtxt(data_path + file_name))
90
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_90.txt"
  return(np.loadtxt(data_path + file_name))
91
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_91.txt"
  return(np.loadtxt(data_path + file_name))
92
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_92.txt"
  return(np.loadtxt(data_path + file_name))
93
94
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_94.txt"
  return(np.loadtxt(data_path + file_name))
95
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_95.txt"
  return(np.loadtxt(data_path + file_name))
96
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_96.txt"
  return(np.loadtxt(data_path + file_name))
97
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_97.txt"
  return(np.loadtxt(data_path + file_name))
98
99
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_99.txt"
  return(np.loadtxt(data_path + file_name))
100
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_100.txt"
  return(np.loadtxt(data_path + file_name))
101
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_101.txt"
  return(np.loadtxt(data_path + file_name))
102
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_102.txt"
  return(np.loadtxt(data_path + file_name))
103
104
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_104.txt"
  return(np.loadtxt(data_path + file_name))
105
106
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_106.txt"
  return(np.loadtxt(data_path + file_name))
107
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_107.txt"
  return(np.loadtxt(data_path + file_name))
108
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_108.txt"
  return(np.loadtxt(data_path + file_name))
109
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_109.txt"
  return(np.loadtxt(data_path + file_name))
110
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_110.txt"
  return(np.loadtxt(data_path + file_name))
111
112
113
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_113.txt"
  return(np.loadtxt(data_path + file_name))
114
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_114.txt"
  return(np.loadtxt(data_path + file_name))
115
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_115.txt"
  return(np.loadtxt(data_path + file_name))
116
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_116.txt"
  return(np.loadtxt(data_path + file_name))
117
118
119
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_119.txt"
  return(np.loadtxt(data_path + file_name))
120
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_120.txt"
  return(np.loadtxt(data_path + file_name))
121
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_121.txt"
  return(np.loadtxt(data_path + file_name))
122
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_122.txt"
  return(np.loadtxt(data_path + file_name))
123
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_123.txt"
  return(np.loadtxt(data_path + file_name))
124
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_124.txt"
  return(np.loadtxt(data_path + file_name))
125
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_125.txt"
  return(np.loadtxt(data_path + file_name))
126
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_126.txt"
  return(np.loadtxt(data_path + file_name))
127
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_127.txt"
  return(np.loadtxt(data_path + file_name))
128
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_128.txt"
  return(np.loadtxt(data_path + file_name))
129
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_129.txt"
  return(np.loadtxt(data_path + file_name))
130
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_130.txt"
  return(np.loadtxt(data_path + file_name))
131
132
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_132.txt"
  return(np.loadtxt(data_path + file_name))
133
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_133.txt"
  return(np.loadtxt(data_path + file_name))
134
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_134.txt"
  return(np.loadtxt(data_path + file_name))
135
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_135.txt"
  return(np.loadtxt(data_path + file_name))
136
137
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_137.txt"
  return(np.loadtxt(data_path + file_name))
138
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_138.txt"
  return(np.loadtxt(data_path + file_name))
139
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_139.txt"
  return(np.loadtxt(data_path + file_name))
140
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_140.txt"
  return(np.loadtxt(data_path + file_name))
141
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_141.txt"
  return(np.loadtxt(data_path + file_name))
142
143
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_143.txt"
  return(np.loadtxt(data_path + file_name))
144
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_144.txt"
  return(np.loadtxt(data_path + file_name))
145
146
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_146.txt"
  return(np.loadtxt(data_path + file_name))
147
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_147.txt"
  return(np.loadtxt(data_path + file_name))
148
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_148.txt"
  return(np.loadtxt(data_path + file_name))
149
150
151
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_151.txt"
  return(np.loadtxt(data_path + file_name))
152
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_152.txt"
  return(np.loadtxt(data_path + file_name))
153
154
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_154.txt"
  return(np.loadtxt(data_path + file_name))
155
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_155.txt"
  return(np.loadtxt(data_path + file_name))
156
157
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_157.txt"
  return(np.loadtxt(data_path + file_name))
158
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_158.txt"
  return(np.loadtxt(data_path + file_name))
159
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_159.txt"
  return(np.loadtxt(data_path + file_name))
160
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_160.txt"
  return(np.loadtxt(data_path + file_name))
161
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_161.txt"
  return(np.loadtxt(data_path + file_name))
162
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_162.txt"
  return(np.loadtxt(data_path + file_name))
163
164
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_164.txt"
  return(np.loadtxt(data_path + file_name))
165
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_165.txt"
  return(np.loadtxt(data_path + file_name))
166
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_166.txt"
  return(np.loadtxt(data_path + file_name))
167
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_167.txt"
  return(np.loadtxt(data_path + file_name))
168
169
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_169.txt"
  return(np.loadtxt(data_path + file_name))
170
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_170.txt"
  return(np.loadtxt(data_path + file_name))
171
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_171.txt"
  return(np.loadtxt(data_path + file_name))
172
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_172.txt"
  return(np.loadtxt(data_path + file_name))
173
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_173.txt"
  return(np.loadtxt(data_path + file_name))
174
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_174.txt"
  return(np.loadtxt(data_path + file_name))
175
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_175.txt"
  return(np.loadtxt(data_path + file_name))
176
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_176.txt"
  return(np.loadtxt(data_path + file_name))
177
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_177.txt"
  return(np.loadtxt(data_path + file_name))
178
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_178.txt"
  return(np.loadtxt(data_path + file_name))
179
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_179.txt"
  return(np.loadtxt(data_path + file_name))
180
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_180.txt"
  return(np.loadtxt(data_path + file_name))
181
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_181.txt"
  return(np.loadtxt(data_path + file_name))
182
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_182.txt"
  return(np.loadtxt(data_path + file_name))
183
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_183.txt"
  return(np.loadtxt(data_path + file_name))
184
185
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_185.txt"
  return(np.loadtxt(data_path + file_name))
186
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_186.txt"
  return(np.loadtxt(data_path + file_name))
187
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_187.txt"
  return(np.loadtxt(data_path + file_name))
188
189
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_189.txt"
  return(np.loadtxt(data_path + file_name))
190
191
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_191.txt"
  return(np.loadtxt(data_path + file_name))
192
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_192.txt"
  return(np.loadtxt(data_path + file_name))
193
194
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_194.txt"
  return(np.loadtxt(data_path + file_name))
195
196
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_196.txt"
  return(np.loadtxt(data_path + file_name))
197
198
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_198.txt"
  return(np.loadtxt(data_path + file_name))
199
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/ff7857f17a0abd6792f5795bb97de966/dynamics_cue_199.txt"
  return(np.loadtxt(data_path + file_name))
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 104, in <module>
    plt.plot_length_highly_correlated(simulations)
AttributeError: module 'matplotlib.pyplot' has no attribute 'plot_length_highly_correlated'
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:83: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py:184: UserWarning: loadtxt: Empty input file: "data_analysis/2a123a981c3e2871ff8ff30383ecca93/dynamics_cue_1.txt"
  return(np.loadtxt(data_path + file_name))
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:93: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:98: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:84: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:94: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:99: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:91: UserWarning: Attempted to set non-positive left xlim on a log-scaled axis.
Invalid limit will be ignored.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:95: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:100: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 107, in <module>
    plot_length_highly_correlated(simulations)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 92, in plot_length_highly_correlated
    sns.kdeplot(high_sequence_durations, cumulative=True)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 705, in kdeplot
    cumulative=cumulative, **kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 303, in _univariate_kdeplot
    raise ImportError("Cumulative distributions are currently "
ImportError: Cumulative distributions are currently only implemented in statsmodels. Please install statsmodels.
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
qt5ct: using qt5ct plugin
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:96: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:101: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:96: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:101: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:92: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:94: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:92: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:94: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:92: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:94: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:92: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:94: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:92: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:94: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:92: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:104: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 93
    sns.kdeplot(high_sequence_durations, color=color_s[ind_key], '--')
                                                                ^
SyntaxError: positional argument follows keyword argument
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  C-c C-cTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 108, in <module>
    plot_length_highly_correlated(simulations)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 92, in plot_length_highly_correlated
    sns.kdeplot(high_sequence_durations, cumulative=True, color=color_s[ind_key])
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 705, in kdeplot
    cumulative=cumulative, **kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 295, in _univariate_kdeplot
    cumulative=cumulative)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 369, in _statsmodels_univariate_kde
    grid, y = kde.support, kde.cdf
  File "pandas/_libs/properties.pyx", line 34, in pandas._libs.properties.CachedProperty.__get__
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 178, in cdf
    args=endog)[0] for i in range(1, gridsize)]
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 178, in <listcomp>
    args=endog)[0] for i in range(1, gridsize)]
  File "/home/gdlb/.local/lib/python3.6/site-packages/scipy/integrate/quadpack.py", line 342, in quad
    points)
  File "/home/gdlb/.local/lib/python3.6/site-packages/scipy/integrate/quadpack.py", line 453, in _quad
    return _quadpack._qagse(func,a,b,args,full_output,epsabs,epsrel,limit)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 171, in <lambda>
    func = lambda x,s: kern.density(s,x)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/sandbox/nonparametric/kernels.py", line 204, in density
    w = 1. / (h * n) * np.sum(self((xs-x)/h), axis=0)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/sandbox/nonparametric/kernels.py", line 409, in __call__
    return self._shape(x)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/sandbox/nonparametric/kernels.py", line 520, in <lambda>
    np.exp(-x**2/2.0), h = h, domain = None, norm = 1.0)
KeyboardInterrupt
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
  C-c C-c176
177
178
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 108, in <module>
    plot_length_highly_correlated(simulations)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 54, in plot_length_highly_correlated
    lamb = file_handling.load_overlap(simulation_key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 141, in load_overlap
    return load_full_dynamics(1, float, key)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 100, in load_full_dynamics
    res.append((load_cue_dynamics(cue, item, dtype, key).tolist()))
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 87, in load_cue_dynamics
    tmp = load_text(key+'/dynamics_cue_%d.txt' % cue)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 184, in load_text
    return(np.loadtxt(data_path + file_name))
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/npyio.py", line 1159, in loadtxt
    for x in read_data(_loadtxt_chunksize):
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/npyio.py", line 1087, in read_data
    items = [conv(val) for (conv, val) in zip(converters, vals)]
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/npyio.py", line 1087, in <listcomp>
    items = [conv(val) for (conv, val) in zip(converters, vals)]
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/npyio.py", line 791, in floatconv
    x.lower()
KeyboardInterrupt
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:85: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:97: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:86: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:86: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:98: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:103: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:86: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:86: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:103: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
No handles with labels found to put in legend.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
qt5ct: using qt5ct plugin
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
No handles with labels found to put in legend.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:106: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:106: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:106: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:106: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  C-c C-cTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 181, in <module>
    plot_length_highly_correlated(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 97, in plot_length_highly_correlated
    sns.kdeplot(high_sequence_durations, cumulative=True, color=color_s[ind_key], label=r'$g_A$ %.1f, $w$ %.1f' % (g_A, w))
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 705, in kdeplot
    cumulative=cumulative, **kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 295, in _univariate_kdeplot
    cumulative=cumulative)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 369, in _statsmodels_univariate_kde
    grid, y = kde.support, kde.cdf
  File "pandas/_libs/properties.pyx", line 34, in pandas._libs.properties.CachedProperty.__get__
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 178, in cdf
    args=endog)[0] for i in range(1, gridsize)]
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 178, in <listcomp>
    args=endog)[0] for i in range(1, gridsize)]
  File "/home/gdlb/.local/lib/python3.6/site-packages/scipy/integrate/quadpack.py", line 342, in quad
    points)
  File "/home/gdlb/.local/lib/python3.6/site-packages/scipy/integrate/quadpack.py", line 453, in _quad
    return _quadpack._qagse(func,a,b,args,full_output,epsabs,epsrel,limit)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 171, in <lambda>
    func = lambda x,s: kern.density(s,x)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/sandbox/nonparametric/kernels.py", line 204, in density
    w = 1. / (h * n) * np.sum(self((xs-x)/h), axis=0)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/sandbox/nonparametric/kernels.py", line 409, in __call__
    return self._shape(x)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/sandbox/nonparametric/kernels.py", line 520, in <lambda>
    np.exp(-x**2/2.0), h = h, domain = None, norm = 1.0)
KeyboardInterrupt
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 181, in <module>
    plot_length_highly_correlated_g_A(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 118, in plot_length_highly_correlated_g_A
    n_key = len(simulation)
NameError: name 'simulation' is not defined
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:171: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:175: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 451, in kdensityfft
    bw = float(bw)
ValueError: could not convert string to float: 'scott'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 179, in <module>
    plot_length_highly_correlated_g_A(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 166, in plot_length_highly_correlated_g_A
    sns.kdeplot(high_sequence_durations, cumulative=True, color=color_s[ind_key], label=r'$\lambda_{th}$ %.1f' %threshold)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 705, in kdeplot
    cumulative=cumulative, **kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 295, in _univariate_kdeplot
    cumulative=cumulative)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 367, in _statsmodels_univariate_kde
    kde.fit(kernel, bw, fft, gridsize=gridsize, cut=cut, clip=clip)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 140, in fit
    clip=clip, cut=cut)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 453, in kdensityfft
    bw = bandwidths.select_bandwidth(X, bw, kern) # will cross-val fit this pattern?
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/bandwidths.py", line 174, in select_bandwidth
    raise RuntimeError(err)
RuntimeError: Selected KDE bandwidth is 0. Cannot estimate density.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 451, in kdensityfft
    bw = float(bw)
ValueError: could not convert string to float: 'scott'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 179, in <module>
    plot_length_highly_correlated_g_A(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 166, in plot_length_highly_correlated_g_A
    sns.kdeplot(high_sequence_durations, cumulative=True, color=color_s[ind_key], label=r'$\lambda_{th}$ %.1f' %threshold)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 705, in kdeplot
    cumulative=cumulative, **kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 295, in _univariate_kdeplot
    cumulative=cumulative)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 367, in _statsmodels_univariate_kde
    kde.fit(kernel, bw, fft, gridsize=gridsize, cut=cut, clip=clip)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 140, in fit
    clip=clip, cut=cut)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 453, in kdensityfft
    bw = bandwidths.select_bandwidth(X, bw, kern) # will cross-val fit this pattern?
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/bandwidths.py", line 174, in select_bandwidth
    raise RuntimeError(err)
RuntimeError: Selected KDE bandwidth is 0. Cannot estimate density.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 451, in kdensityfft
    bw = float(bw)
ValueError: could not convert string to float: 'scott'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 179, in <module>
    plot_length_highly_correlated_g_A(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 166, in plot_length_highly_correlated_g_A
    sns.kdeplot(high_sequence_durations, cumulative=True,  label=r'$\lambda_{th}$ %.1f' %threshold)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 705, in kdeplot
    cumulative=cumulative, **kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 295, in _univariate_kdeplot
    cumulative=cumulative)
  File "/home/gdlb/.local/lib/python3.6/site-packages/seaborn/distributions.py", line 367, in _statsmodels_univariate_kde
    kde.fit(kernel, bw, fft, gridsize=gridsize, cut=cut, clip=clip)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 140, in fit
    clip=clip, cut=cut)
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/kde.py", line 453, in kdensityfft
    bw = bandwidths.select_bandwidth(X, bw, kern) # will cross-val fit this pattern?
  File "/home/gdlb/.local/lib/python3.6/site-packages/statsmodels/nonparametric/bandwidths.py", line 174, in select_bandwidth
    raise RuntimeError(err)
RuntimeError: Selected KDE bandwidth is 0. Cannot estimate density.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:173: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:173: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:172: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:172: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:172: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:172: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:172: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:172: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 178, in <module>
    plot_length_highly_correlated_g_A(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/length_highly_correlated.py", line 165, in plot_length_highly_correlated_g_A
    cumulative=1, color=color_s[ind_th], bins=np.array(n_min-0.1, n_max+0.1, 1, dtype=int))
ValueError: only 2 non-keyword arguments accepted
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:174: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:174: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:174: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:174: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:174: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:174: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:174: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:102: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:106: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:104: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:108: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:104: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:108: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:104: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:108: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:104: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:108: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
# coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:104: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:108: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:90: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:104: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:108: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> # coding=utf-8
... """Cues the model with all possible patterns and shows the evolution of the
... main parameters, as well as statistics on patterns and transitions that occured
... """
... import os
... import matplotlib as mpl
... import matplotlib.pyplot as plt
... import pickle
... 
... # Standard libraries
... ...
... # plt.hist2d(XX, YY, bins=(bins_x, bins_y))
... # plt.colorbar()
... # ax4.hlines(a*(S-1)/S, x0, x1, colors='w')
... # ax4.vlines(a/S, y0, y1, colors='w')
... # ax4.set_xlim(x0, x1)
... # ax4.set_ylim(y0, y1)
... 
... # plt.savefig(set_name[:-4] + '_2D_hist_and_scatter.png')
... # plt.tight_layout(rect=[0, 0.03, 1, 0.95])
... # plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:173: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...     plt.plot(thresholds, shuffled_low_s, '--g', label='Bias low')
...     plt.ylabel('Mutual information in pairs (m=2)')
...     plt.xlim(0, 1)
...     plt.title('w=%.2f, g_A=%.2f' % (w, g_A))
...     if ind_sim == 0:
...         plt.legend()
...     if ind_sim in [4, 5]:
...         plt.xlabel('Overlap threshold')
... 
... plt.show()
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
__main__:134: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:144: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:154: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
...         plt.legend()
...     if ind_sim in [4, 5]:
...         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(211)
... plot_information_flow(simulations_above)
... plt.subplot(212)
... test_shuffle_error(2**15, p)
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
15974 0
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
15974 0
15969 5
15881 93
15624 350
15026 948
13746 2228
10920 5054
3975 11999
0 15974
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
53007 123
52145 985
48033 5097
39710 13420
30406 22724
20343 32787
10689 42441
3151 49979
47 53083
0 53130
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
82785 1113
72319 11579
57920 25978
46141 37757
36776 47122
27786 56112
17531 66367
5231 78667
18 83880
0 83898
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:908: RuntimeWarning: invalid value encountered in true_divide
  return n/db/n.sum(), bin_edges
/home/gdlb/.local/lib/python3.6/site-packages/numpy/lib/histograms.py:1118: RuntimeWarning: invalid value encountered in true_divide
  hist /= s
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(211)
... plot_information_flow(simulations_above)
... plt.subplot(212)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(211)
... plot_information_flow(simulations_above)
... plt.subplot(212)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 290, in <module>
    plot_information_flow(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 135, in plot_information_flow
    plt.plot(m_saved, mi_saved-shuffled, '-o',
TypeError: unsupported operand type(s) for -: 'list' and 'list'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 291, in <module>
    plot_information_flow(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 134, in plot_information_flow
    corrected = mi_saved - shuffled
TypeError: unsupported operand type(s) for -: 'list' and 'list'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 292, in <module>
    plot_information_flow(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 134, in plot_information_flow
    print(np.array(mi_saved.shape))
AttributeError: 'list' object has no attribute 'shape'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
(11,)
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
(11,)
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
(11,)
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 1
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
ind_key = 2
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
>>> exit()

Process Python finished
Python 3.6.9 (default, Apr 18 2020, 01:56:04) 
[GCC 8.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> python.el: native completion setup loaded
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 49, in <module>
    russo2008_mode) = file_handling.load_parameters(simulations[0])
NameError: name 'simulations' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
qt5ct: using qt5ct plugin
ind_key = 0
(11,)
ind_key = 1
(11,)
ind_key = 2
(11,)
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 294, in <module>
    test_shuffle_error(2**15, p)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 166, in test_shuffle_error
    for ind_key in range(len(simulations)):
NameError: name 'simulations' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... # test_shuffle_error(2**15, p)
ind_key = 0
[7.3135448344614025 array([3.58078829]) array([2.92608722])
 array([2.81095198]) array([2.76567053]) array([2.74066585])
 array([2.75465787]) array([2.7245464]) array([2.72420342])
 array([2.72632297]) array([2.7582482])]
ind_key = 1
[7.3599363817773735 array([2.60884633]) array([1.44460883])
 array([1.29838093]) array([1.21207013]) array([1.17014575])
 array([1.17040604]) array([1.17243127]) array([1.16716508])
 array([1.17970048]) array([1.17689722])]
ind_key = 2
[7.3561857812817895 array([2.38494607]) array([0.81572202])
 array([0.53711988]) array([0.40343433]) array([0.38305839])
 array([0.37474625]) array([0.37183799]) array([0.37547872])
 array([0.37690503]) array([0.37194769])]
<matplotlib.axes._subplots.AxesSubplot object at 0x7f279e8666d8>
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... # test_shuffle_error(2**15, p)
ind_key = 0
(11, 11)
ind_key = 1
(11, 11)
ind_key = 2
(11, 11)
<matplotlib.axes._subplots.AxesSubplot object at 0x7f2788147ac8>
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... # test_shuffle_error(2**15, p)
ind_key = 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 294, in <module>
    plot_information_flow(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 135, in plot_information_flow
    print((np.array(mi_saved.shape)))
AttributeError: 'list' object has no attribute 'shape'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... # test_shuffle_error(2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 11)
ind_key = 1
(11,)
(11, 1)
(11, 11)
ind_key = 2
(11,)
(11, 1)
(11, 11)
<matplotlib.axes._subplots.AxesSubplot object at 0x7f2789515cc0>
>>>   C-c C-c  C-c C-c
Error in sys.excepthook:
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/apport_python_hook.py", line 34, in apport_excepthook
    def apport_excepthook(exc_type, exc_obj, exc_tb):
KeyboardInterrupt

Original exception was:
  File "<stdin>", line 1
    C-c C-c
    ^
IndentationError: unexpected indent
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... # test_shuffle_error(2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
<matplotlib.axes._subplots.AxesSubplot object at 0x7f278833db38>
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... # test_shuffle_error(2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
<matplotlib.axes._subplots.AxesSubplot object at 0x7f279e81b668>
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 296, in <module>
    test_shuffle_error(2**15, p)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 168, in test_shuffle_error
    for ind_key in range(len(simulations)):
NameError: name 'simulations' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 296, in <module>
    test_shuffle_error(2**15, p)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 168, in test_shuffle_error
    for ind_key in range(len(simulations)):
NameError: name 'simulations' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 296, in <module>
    test_shuffle_error(2**15, p)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 168, in test_shuffle_error
    for ind_key in range(len(simulations)):
NameError: name 'simulations' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 149
    mi = []
     ^
IndentationError: expected an indented block
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 149
    mi = []
     ^
IndentationError: expected an indented block
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 296, in <module>
    test_shuffle_error(2**15, p)
TypeError: test_shuffle_error() missing 1 required positional argument: 'p'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 296, in <module>
    test_shuffle_error(simulations_above, 2**15, p)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 171, in test_shuffle_error
    ryom_name = ryom_data[ind_key]
NameError: name 'ryom_data' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**15, p)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 171
    (dt, tSim, N, S, p, num_fact, p_fact,
    ^
IndentationError: unexpected indent
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**15, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.727920454563199
6.807354922057604
6.894817763307944
6.977279923499917
7.05528243550119
7.149747119504682
7.22881869049588
7.312882955284356
7.400879436282184
7.483815777264256
7.569855608330948
7.651051691178929
7.734709620225839
7.820178962415189
7.906890595608519
7.988684686772166
8.076815597050832
8.159871336778389
8.24317398347295
8.330916878114618
8.413627929024173
8.499845887083206
8.584962500721156
8.668884984266247
8.751544059089097
8.83605035505807
8.92184093707449
9.005624549193879
9.090112419664289
9.17492568250068
9.259743263690781
9.344295907915818
9.428360172704291
9.51175265376738
9.596189756144412
9.681238411777805
9.766528908598865
9.850186837645774
9.935165049603695
10.019590728357882
10.103287808412022
10.188588845707349
10.27262978497637
10.357552004618084
10.44190670454224
10.526499239136566
10.610102062999665
10.69522829149575
10.779719355143405
10.863411958941638
10.948367231584678
11.032734528586714
11.116993677546981
11.201511344500146
11.285980105928212
11.3701424794954
11.454813348512525
11.539158811108031
11.623424289869911
11.707790495528824
11.792383614935188
11.876900591040306
11.961087889997332
12.045759661382682
12.129926933510394
12.214319120800766
12.298921740969753
12.38316426063511
12.467605550082997
12.552188759557149
12.63662462054365
12.720885503593724
12.805340828416385
12.889694079382087
12.974235317355358
13.05866825034057
13.143064280631412
13.227465529501675
13.31174831500496
13.396203382141694
13.480663997619299
13.565102078360313
13.649480738968602
13.733862719678543
13.818282583451978
13.902657746486321
13.987086329328193
14.071462362556623
14.155925016026579
14.240344146631418
14.324743110494415
14.409125710465315
14.49354276473389
14.577959827136642
14.662334585740657
14.746776719975312
14.8311587700151
14.915552644593435
15.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**16, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.727920454563199
6.820178962415189
6.9188632372745955
7.011227255423254
7.10852445677817
7.209453365628949
7.303780748177103
7.392317422778761
7.491853096329675
7.584962500721156
7.679480099505446
7.774787059601174
7.870364719583405
7.965784284662087
8.060695931687555
8.154818109052105
8.247927513443585
8.344295907915816
8.43879185257826
8.531381460516313
8.625708843064466
8.721099188707186
8.816983623255382
8.909893083770042
9.005624549193879
9.100662339005199
9.194756854422247
9.290018846932618
9.383704292474052
9.477758266443889
9.571752643503546
9.667111542075027
9.76155123244448
9.85642552862553
9.951284714966972
10.045759661382684
10.139551352398794
10.234817431117325
10.328674927327947
10.4231159101471
10.517669388133813
10.612868497291041
10.707359132080883
10.801708358916462
10.896332403909941
10.99081307915361
11.085472459181283
11.179909090014934
11.274378153246364
11.369052007001388
11.46352437327118
11.557942286787448
11.652396861477678
11.746934136372298
11.841564347730577
11.935901682267586
12.030667136246942
12.125090539303256
12.219471067394357
12.314016703901359
12.408595112798103
12.50308035175293
12.597587039586216
12.69217957631254
12.786678033890652
12.881113960675096
12.975668873593932
13.070288689961679
13.16474983024815
13.259301915079512
13.353698209048034
13.448245388310358
13.542790061554902
13.637304122106201
13.731743290707842
13.826349864720092
13.92081804583632
14.015327930490415
14.109830654278795
14.204341884237456
14.298850162738441
14.39332341615394
14.487840033823051
14.582377235640692
14.676893686937685
14.7713862982601
14.86587822890673
14.96040926209033
15.054901033605272
15.149429590056743
15.243917755743324
15.338423021918947
15.432933316635081
15.527446460872524
15.621965996687933
15.716471175169026
15.810973220002165
15.905481025353847
16.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #         plt.legend()
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... 
... 
... ...
... #     if ind_sim in [4, 5]:
... #         plt.xlabel('Overlap threshold')
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
... plt.tight_layout()
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... simulations = ['4406010109634386043', '8276126441040930693',
...                '2037770147520999148']
... 
... ...
...     cbar = plt.colorbar()
...     plt.xlabel('Cycle length')
...     plt.ylabel('Number of cycle repetition')
...     plt.title("Random sequence")
...     plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, $w$=%.2f, $g_A$=%.2f, %d transitions, Gsln" % (w, g_A, event_counter(retrieved_saved)))
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.savefig("../Notes/.img/Repartition_of_cycles_w=%.2f_g_A=%.2f_%d_transitions_Gsln.png" % (w, g_A, event_counter(retrieved_saved)))
...     plt.show()
...     plt.close('all')
ind_key = 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/cycles.py", line 32, in <module>
    russo2008_mode) = file_handling.load_parameters(simulation_key+'.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 129, in load_parameters
    return load_data(key+'/parameters.pkl')
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/file_handling.py", line 124, in load_data
    with open(data_path+file_name, 'rb') as f:
FileNotFoundError: [Errno 2] Aucun fichier ou dossier de ce type: 'data_analysis/4406010109634386043.pkl/parameters.pkl'
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
...                      '2999e6e4eede18f9212d8abdd146e7f4',
...                      '779e267d7fd11b394a96bc18ac9d2261']  # Just above the border
... ...
...     cbar = plt.colorbar()
...     plt.xlabel('Cycle length')
...     plt.ylabel('Number of cycle repetition')
...     plt.title("Random sequence")
...     plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, $w$=%.2f, $g_A$=%.2f, %d transitions, Gsln" % (w, g_A, event_counter(retrieved_saved)))
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.savefig("../Notes/.img/Repartition_of_cycles_w=%.2f_g_A=%.2f_%d_transitions_Gsln.png" % (w, g_A, event_counter(retrieved_saved)))
...     plt.show()
...     plt.close('all')
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...     plt.ylim(1, 1000)
...     cbar = plt.colorbar()
...     plt.xlabel('Cycle length')
...     plt.ylabel('Number of cycle repetition')
...     plt.title("Random sequence")
...     plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, $w$=%.2f, $g_A$=%.2f, %d transitions, Gsln" % (w, g_A, event_counter(retrieved_saved)))
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.savefig("../Notes/.img/Repartition_of_cycles_w=%.2f_g_A=%.2f_%d_transitions_Gsln.png" % (w, g_A, event_counter(retrieved_saved)))
...     plt.show()
ind_key = 0
ind_key = 1
__main__:86: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
__main__:96: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...     plt.ylim(1, 1000)
...     cbar = plt.colorbar()
...     plt.xlabel('Cycle length')
...     plt.ylabel('Number of cycle repetition')
...     plt.title("Random sequence")
...     plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, $w$=%.2f, $g_A$=%.2f, %d transitions, Gsln" % (w, g_A, event_counter(retrieved_saved)))
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.savefig("../Notes/.img/Repartition_of_cycles_w=%.2f_g_A=%.2f_%d_transitions_Gsln.png" % (w, g_A, event_counter(retrieved_saved)))
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...     plt.ylim(1, 1000)
...     cbar = plt.colorbar()
...     plt.xlabel('Cycle length')
...     plt.ylabel('Number of cycle repetition')
...     plt.title("Random sequence")
...     plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, $w$=%.2f, $g_A$=%.2f, %d transitions, Gsln" % (w, g_A, event_counter(retrieved_saved)))
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.savefig("../Notes/.img/Repartition_of_cycles_w=%.2f_g_A=%.2f_%d_transitions_Gsln.png" % (w, g_A, event_counter(retrieved_saved)))
...     plt.show()
ind_key = 0
ind_key = 1
__main__:98: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
ind_key = 2
__main__:88: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, $w$=%.2f, $g_A$=%.2f, %d transitions, Gsln" % (w, g_A, event_counter(retrieved_saved)))
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.savefig("../Notes/.img/Repartition_of_cycles_w=%.2f_g_A=%.2f_%d_transitions_Gsln.png" % (w, g_A, event_counter(retrieved_saved)))
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartion of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> np.max(data, 1)
array([1.1185e+04, 1.1185e+04, 5.9000e+03, ..., 1.0000e+00, 1.0000e+00,
       0.0000e+00])
>>> np.max(data, 0)
array([    0.,   200.,  8297., 11185.,  5169.,  1582.,   403.,    92.])
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/cycles.py", line 97, in <module>
    data, random_data, xx, yy = cycle_count(retrieved_saved)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/cycles.py", line 76, in cycle_count
    data = data/max(1, np.max(data, 0))
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/cycles.py", line 97, in <module>
    data, random_data, xx, yy = cycle_count(retrieved_saved)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/data_analysis/cycles.py", line 76, in cycle_count
    data = data/np.max(1, np.max(data, 0))
  File "<__array_function__ internals>", line 6, in amax
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/core/fromnumeric.py", line 2668, in amax
    keepdims=keepdims, initial=initial, where=where)
  File "/home/gdlb/.local/lib/python3.6/site-packages/numpy/core/fromnumeric.py", line 90, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
TypeError: only integer scalar arrays can be converted to a scalar index
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
__main__:76: RuntimeWarning: invalid value encountered in true_divide
__main__:77: RuntimeWarning: invalid value encountered in true_divide
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... import matplotlib.colors as colors
... import file_handling
... import numpy as np
... import numpy.random as rd
... 
... plt.ion()
... plt.close('all')
... 
... simulations_above = ['12257f9b2af7fdeaa5ebeec24b71b13c',
... ...
...         plt.xlim(1, 8)
...         plt.ylim(1, 1000)
...         cbar = plt.colorbar()
...         plt.xlabel('Cycle length')
...         plt.ylabel('Number of cycle repetition')
...         plt.title("Random sequence")
...         plt.yscale('log')
...     plt.suptitle(r"Repartition of cycles, just above latching border")
...     plt.tight_layout(rect=[0, 0.03, 1, 0.95])
...     plt.show()
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... import statistics as sts
... 
... ...
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
... plt.tight_layout()
... 
... plt.figure('Crossovers')
ind_key = 0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 294, in <module>
    plot_information_flow(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 133, in plot_information_flow
    retrieved_saved)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 88, in get_mi
    mi = mutual_information(seq_cut, seq_shifted, p)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 22, in mutual_information
    ent_cut = sts.entropy(hist1, base=2)
AttributeError: module 'statistics' has no attribute 'entropy'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
... plt.tight_layout()
... 
... plt.figure('Crossovers')
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
<Figure size 640x480 with 0 Axes>
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
... plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 299, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 263, in compare_mi_crossover
    threshold = median(lamb)
  File "/usr/lib/python3.6/statistics.py", line 385, in median
    return (data[i - 1] + data[i])/2
TypeError: unsupported operand type(s) for /: 'list' and 'int'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 299, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 263, in compare_mi_crossover
    threshold = median(lamb)
  File "/usr/lib/python3.6/statistics.py", line 385, in median
    return (data[i - 1] + data[i])/2
TypeError: unsupported operand type(s) for /: 'list' and 'int'
>>> lamb
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lamb' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 263
    lamb_list = [lamb[ind_cue][ind_trans] for ind_cue in range(len(lamb)) for ind_trans in range(len(lamb[ind_cue)))]
                                                                                                                 ^
SyntaxError: invalid syntax
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 300, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 264, in compare_mi_crossover
    threshold = median(lamb)
  File "/usr/lib/python3.6/statistics.py", line 385, in median
    return (data[i - 1] + data[i])/2
TypeError: unsupported operand type(s) for /: 'list' and 'int'
>>> lmb_list[:10]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lmb_list' is not defined
>>> lamb_list[:10]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'lamb_list' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
[0.6726435508196735, 0.36830243225639897, 0.6741335536122866, 0.3865646684653466, 0.5993617150168039, 0.6050539302681447, 0.7618207135155446, 0.4405486386459909, 0.7167455506886089, 0.5733723703067888]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 301, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 265, in compare_mi_crossover
    threshold = median(lamb)
  File "/usr/lib/python3.6/statistics.py", line 385, in median
    return (data[i - 1] + data[i])/2
TypeError: unsupported operand type(s) for /: 'list' and 'int'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
[0.6726435508196735, 0.36830243225639897, 0.6741335536122866, 0.3865646684653466, 0.5993617150168039, 0.6050539302681447, 0.7618207135155446, 0.4405486386459909, 0.7167455506886089, 0.5733723703067888]
3090 3128
[0.7214043924250392, 0.44528016836209333, 0.48675145624955557, 0.6103197169900628, 0.5610344955428643, 0.48765295349542825, 0.4254568227530469, 0.5727554438048504, 0.3418448963389514, 0.5234794906886758]
11401 11417
[0.0006471362905917107, 0.07463792152016212, 0.2670613192152092, 0.2687802018823151, 0.33903208386874895, 0.6619319626193337, 0.6405228310091308, 0.13338084065477965, 0.5605771061403071, 0.6969319990100562]
42028 41870
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
3090 3128
11401 11417
42028 41870
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
3090 3128
11401 11417
42028 41870
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
0.5434079345063609
11401 11417
0.40308371958089106
42028 41870
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 307, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 292, in compare_mi_crossover
    ax1.ylabel('Mutual information in pairs (m=2)')
AttributeError: 'AxesSubplot' object has no attribute 'ylabel'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 307, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 292, in compare_mi_crossover
    ax1.ylabel('Mutual information in pairs (m=2)')
AttributeError: 'AxesSubplot' object has no attribute 'ylabel'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 315, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 304, in compare_mi_crossover
    ax3.plot(g_A_s, threshold_s)
  File "/home/gdlb/.local/lib/python3.6/site-packages/matplotlib/axes/_axes.py", line 1646, in plot
    lines = [*self._get_lines(*args, data=data, **kwargs)]
  File "/home/gdlb/.local/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 216, in __call__
    yield from self._plot_args(this, kwargs)
  File "/home/gdlb/.local/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 342, in _plot_args
    raise ValueError(f"x and y must have same first dimension, but "
ValueError: x and y must have same first dimension, but have shapes (3,) and (1,)
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
__main__:314: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
__main__:314: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 324, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 303, in compare_mi_crossover
    ax2/set_ylabel(r'$w$')
NameError: name 'set_ylabel' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
... plt.tight_layout()
... 
... # plt.figure('Crossovers')
... # compare_mi_crossover(simulations_above)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... plt.figure('Information flow')
... plt.subplot(121)
... plot_information_flow(simulations_above)
... plt.subplot(122)
... test_shuffle_error(simulations_above, 2**17, p)
... plt.tight_layout()
... 
... # plt.figure('Crossovers')
... # compare_mi_crossover(simulations_above)
ind_key = 0
(11,)
(11, 1)
(11, 1)
ind_key = 1
(11,)
(11, 1)
(11, 1)
ind_key = 2
(11,)
(11, 1)
(11, 1)
6.643856189774725
6.7414669864011465
6.845490050944376
6.954196310386876
7.05528243550119
7.159871336778389
7.266786540694902
7.375039431346925
7.475733430966398
7.584962500721156
7.6865005271832185
7.794415866350106
7.894817763307945
8.0
8.103287808412023
8.20945336562895
8.31741261376487
8.422064766172811
8.523561956057014
8.62935662007961
8.73470962022584
8.839203788096945
8.94251450533924
9.047123912114026
9.152284842306582
9.257387842692651
9.361943773735241
9.467605550082997
9.571752643503546
9.67595703294175
9.78135971352466
9.885696373339394
9.9901039638575
10.095397022792557
10.199672344836365
10.304921669581674
10.4093909361377
10.513727595952437
10.618385502258606
10.722807531169547
10.828136484194108
10.932214751968385
11.036860446673046
11.141468555393086
11.246146774635866
11.350939181546432
11.45532722030456
11.560332834212442
11.664891669286087
11.769424641552755
11.874212934830874
11.978710459106358
12.083146870816742
12.1879705919842
12.292609222764296
12.397139806235602
12.501837184902296
12.606405212697785
12.711021616791838
12.815583433851021
12.92016673723887
13.02479338470255
13.129444023031947
13.234068951183083
13.338736382573915
13.443332100575896
13.547858506058418
13.652508902408181
13.757077433254292
13.861765433591213
13.966325193888277
14.070959476927566
14.175549550636191
14.280190792216908
14.384783750093353
14.489408965226877
14.5939746192773
14.69859615674503
14.80322299951846
14.907829544578135
15.012449952425579
15.11703427510276
15.221662637244874
15.326253914834918
15.430877195584948
15.535488022363822
15.640075436716671
15.74470246724104
15.849307354070058
15.953923597798392
16.058520287038203
16.16313860480586
16.267737679788183
16.372337961262694
16.4769518366034
16.581568389311393
16.68617220667183
16.790781199637014
16.895385939898507
17.0
ind_key = 0
ind_key = 1
ind_key = 2
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486558745916879
3090 3128
[3.97843859]
0.5434079345063609
11401 11417
[3.05061322]
0.40308371958089106
42028 41870
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 328, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 270, in compare_mi_crossover
    threshold = median_low(lamb_list)
NameError: name 'median_low' is not defined
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median, median_low, median_high
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486525305441845
bingo
3091 3128
[3.97830209]
0.5434069593927062
bingo
11402 11417
[3.05050861]
0.40307891733378265
bingo
42029 41870
[2.73339508]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median, median_low, median_high
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 336, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 278, in compare_mi_crossover
    threshold = find_median(lamb_list)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 193, in find_median
    ind = len(seq_safe//2)
TypeError: unsupported operand type(s) for //: 'list' and 'int'
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median, median_low, median_high
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
0.6486592186391913
bingo
3090 3129
[3.97843859]
0.5434089096200158
bingo
11401 11418
[3.05061322]
0.4030885218279995
bingo
42028 41871
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median, median_low, median_high
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 337, in <module>
    compare_mi_crossover(simulations_above)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 279, in compare_mi_crossover
    threshold = find_median(lamb_list)
  File "/home/gdlb/Nextcloud/limbo_internship/PottsModel/mutual_information_analysis.py", line 194, in find_median
    print('l='+len(sequence))
TypeError: must be str, not int
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median, median_low, median_high
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Events 6818
l=6818
0.6486592186391913
bingo
3090 3129
[3.97843859]
Events 23418
l=23418
0.5434089096200158
bingo
11401 11418
[3.05061322]
Events 84498
l=84498
0.4030885218279995
bingo
42028 41871
[2.73346942]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median, median_low, median_high
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Events 6818
l=6218
0.6478214104574234
bingo
3109 3110
[3.97415696]
Events 23418
l=22818
0.5432426639569319
bingo
11409 11410
[3.05059548]
Events 84498
l=83898
0.4038647685836666
bingo
41949 41950
[2.73397648]
>>> import matplotlib.pyplot as plt
... 
... # Standard libraries
... import numpy as np
... import scipy.stats as sts
... # Local modules
... import file_handling
... import numpy.random as rd
... from statistics import median, median_low, median_high
... 
... ...
... 
... # plt.figure('Information flow')
... # plt.subplot(121)
... # plot_information_flow(simulations_above)
... # plt.subplot(122)
... # test_shuffle_error(simulations_above, 2**17, p)
... # plt.tight_layout()
... 
... plt.figure('Crossovers')
... compare_mi_crossover(simulations_above)
Events 6818
0.6478108768146403
3109 3109
[3.97415696]
Events 23418
0.5432367906611784
11409 11409
[3.05059548]
Events 84498
0.4038646300251094
41949 41949
[2.73397648]
>>> 